1
00:00:00,401 --> 00:00:04,536
[MUSIC]

2
00:00:04,605 --> 00:00:07,439
斯坦福大学

3
00:00:07,508 --> 00:00:11,676
>>欢迎来到Stanford CS193P，开发应用程序

4
00:00:11,745 --> 00:00:13,378
iOS，冬季2017。

5
00:00:13,447 --> 00:00:15,280
这是16号演讲。

6
00:00:15,349 --> 00:00:18,883
我们今天有一些杂项，我都是这样的

7
00:00:18,952 --> 00:00:23,221
认为可能对您的最终项目感兴趣。

8
00:00:23,290 --> 00:00:25,390
我们会谈谈警报(alerts)和

9
00:00:25,459 --> 00:00:28,226
警报的表弟：行动表(action sheet)。

10
00:00:28,295 --> 00:00:30,095
我们会谈论通知，

11
00:00:30,163 --> 00:00:32,497
那就是我们的MVC的电台模型。

12
00:00:32,566 --> 00:00:34,399
我们将讨论应用程序的生命周期：我们

13
00:00:34,468 --> 00:00:36,101
已经谈到生命周期的视图，

14
00:00:36,170 --> 00:00:38,103
但现在我们将谈谈生命周期

15
00:00:38,171 --> 00:00:39,204
整个应用。

16
00:00:39,273 --> 00:00:41,373
最后我会谈论持久性。

17
00:00:41,442 --> 00:00:42,674
我们如何存储这些东西

18
00:00:42,743 --> 00:00:44,976
当我们的应用程序启动它找到它和

19
00:00:45,045 --> 00:00:48,113
当然，你已经知道了这样做的几种方法。

20
00:00:48,182 --> 00:00:51,883
所以我要告诉你几个人。

21
00:00:51,951 --> 00:00:55,687
我们从这个警报和行动表业务开始。

22
00:00:55,755 --> 00:00:57,188
这些都是弹出来的

23
00:00:57,257 --> 00:01:01,125
向用户询问“用户界面的种类”。

24
00:01:01,194 --> 00:01:04,963
他们只是MVC，警报和行动表只是

25
00:01:05,031 --> 00:01:08,533
一个MVC，它们总是以模态或者形式出现

26
00:01:08,602 --> 00:01:12,771
我们上次学到的一个流行音乐基本上是模态的。

27
00:01:12,840 --> 00:01:15,974
所以警告在屏幕中间弹出，

28
00:01:16,043 --> 00:01:20,345
他们通常只提出两个答案的问题。

29
00:01:20,414 --> 00:01:23,614
喜欢是或否，确定和取消。

30
00:01:23,683 --> 00:01:27,352
只要一个OK按钮，我就可以提醒一下，这是可以的。

31
00:01:28,789 --> 00:01:31,890
通常你可能会想到如果有更好的方法

32
00:01:31,959 --> 00:01:35,727
将该信息呈现给用户而不是放置

33
00:01:35,796 --> 00:01:37,313
然后我们开始谈论有三个答案

34
00:01:37,314 --> 00:01:38,831
一个警报。

35
00:01:38,899 --> 00:01:40,231
在警报。

36
00:01:40,300 --> 00:01:42,267
（A）你可能想想一下动作片，

37
00:01:42,335 --> 00:01:43,869
我们之后会详细讨论这个

38
00:01:43,937 --> 00:01:46,604
和（B）你可能想想我如何得到

39
00:01:46,673 --> 00:01:49,374
在我要求他们的情况下的用户

40
00:01:49,442 --> 00:01:50,708
一个紧急问题，

41
00:01:50,777 --> 00:01:52,844
有三个不同的答案或

42
00:01:52,913 --> 00:01:56,347
甚至超过三个，这真的很有趣。

43
00:01:56,416 --> 00:01:58,550
所以，警报是非常破坏UI。

44
00:01:58,618 --> 00:02:01,119
用户很高兴地使用他们的用户界面和

45
00:02:01,188 --> 00:02:03,955
然后bam，整个屏幕变灰，有这个

46
00:02:04,023 --> 00:02:07,693
中间的小盒子，给他们一些警报。

47
00:02:07,761 --> 00:02:10,595
我看到一个关于使用警报的课堂论坛帖子

48
00:02:10,664 --> 00:02:13,398
一个伟大的建议，从一个TAs是，

49
00:02:13,467 --> 00:02:16,467
这是你想要阅读苹果人机界面

50
00:02:16,536 --> 00:02:19,137
交互指南关于使用警报的，何时使用警报，

51
00:02:19,206 --> 00:02:21,306
在警报中说什么，这样的事情。

52
00:02:21,374 --> 00:02:24,309
其实我建议大家读人机

53
00:02:24,378 --> 00:02:26,912
界面交互指南，所以

54
00:02:26,980 --> 00:02:30,281
我会在论坛上发贴，链接到那个。

55
00:02:30,350 --> 00:02:33,484
而我其实就是要抱着你

56
00:02:33,553 --> 00:02:35,954
最终项目中的UI的UI部分。

57
00:02:36,022 --> 00:02:39,157
所以要特别注意，苹果做的

58
00:02:39,226 --> 00:02:42,694
分析各种UI的所有用途的一个很好的工作

59
00:02:42,762 --> 00:02:46,164
元素和种类有什么不错，什么不行

60
00:02:46,233 --> 00:02:50,568
那么好，而且不同的东西之间是一致的。

61
00:02:50,637 --> 00:02:54,773
警报可以向用户询问一些文本。

62
00:02:54,842 --> 00:02:57,675
这被滥用了

63
00:02:57,744 --> 00:03:01,613
像登录屏幕一样从警报和类似的东西。

64
00:03:01,681 --> 00:03:04,382
实际上我的经验很少见

65
00:03:04,451 --> 00:03:06,951
想要提醒一下文字，但我会告诉你的

66
00:03:07,020 --> 00:03:10,989
今天的演示如何做，但这是非常不寻常的。

67
00:03:11,058 --> 00:03:13,792
然后有动作单，

68
00:03:13,861 --> 00:03:16,895
现在一个动作片不会灰色的整个屏幕和

69
00:03:16,964 --> 00:03:17,796
出现在一个小盒子里，

70
00:03:17,864 --> 00:03:21,466
而是从iPhone上滑下来。

71
00:03:21,534 --> 00:03:24,303
而在iPad上，它总是会流行起来。

72
00:03:25,905 --> 00:03:29,174
现在，一个action sheet，我喜欢想想

73
00:03:29,242 --> 00:03:32,477
分支决策用户界面元素。

74
00:03:32,546 --> 00:03:35,781
所以用户已经在UI中找到了一些

75
00:03:35,849 --> 00:03:38,883
根本无法真正进行而不知道

76
00:03:38,952 --> 00:03:40,619
用户想要做什么

77
00:03:40,687 --> 00:03:44,323
所以举个例子：也许你想要包括一个图像

78
00:03:44,391 --> 00:03:45,524
一些东西。

79
00:03:45,593 --> 00:03:48,593
一个联系人，它是个人资料图片，或

80
00:03:48,662 --> 00:03:50,195
这样的东西

81
00:03:50,263 --> 00:03:52,630
你想要这个图像来自相机，

82
00:03:52,699 --> 00:03:55,200
现在要拍照？

83
00:03:55,269 --> 00:03:58,002
还是从照片库，您拍摄过去的照片？

84
00:03:58,071 --> 00:04:01,773
或者也许从剪贴画的某些集合视图或某事，

85
00:04:01,842 --> 00:04:05,076
化身或者你所提供的任何东西，所以你有这样的东西

86
00:04:05,145 --> 00:04:08,146
在这三个方向之一进入一个active sheet

87
00:04:08,215 --> 00:04:11,549
可能从底部滑下来，说你知道添加照片，

88
00:04:11,618 --> 00:04:14,386
你想做什么，你得到这些选择。

89
00:04:14,454 --> 00:04:18,323
通常也有取消，我也不是这样

90
00:04:18,392 --> 00:04:19,857
这样做取消。

91
00:04:19,926 --> 00:04:23,795
行动通常有两个答案。

92
00:04:23,863 --> 00:04:27,198
采取行动不一定是错误的

93
00:04:27,267 --> 00:04:29,167
只有两个答案，但是

94
00:04:29,235 --> 00:04:32,404
这种情况很少出现。

95
00:04:33,506 --> 00:04:35,440
那么这两个东西怎么样？

96
00:04:35,509 --> 00:04:37,909
这是iPhone上的action sheet。

97
00:04:37,978 --> 00:04:41,012
你看看它是如何从底部滑出来的，它有

98
00:04:41,080 --> 00:04:44,482
一些选择，这是一个警报(alert)的样子。

99
00:04:44,551 --> 00:04:46,151
它占用整个屏幕。

100
00:04:46,219 --> 00:04:48,987
这一个恰好在它里面有一点文字字段，

101
00:04:49,056 --> 00:04:51,222
有两个选择。

102
00:04:51,291 --> 00:04:52,524
所以让我们来谈谈API。

103
00:04:52,592 --> 00:04:54,893
为了使这些工作是完全相同的API，

104
00:04:54,961 --> 00:04:57,829
事实上，它们是同样的MVC。

105
00:04:59,099 --> 00:05:02,567
这是创建这个视图控制器的API，

106
00:05:02,636 --> 00:05:04,669
它被称为UI警报控制器，和

107
00:05:04,738 --> 00:05:06,705
它只是一个标题，这是顶端的东西，

108
00:05:06,774 --> 00:05:08,940
你看到它在哪里重新部署卡西尼。

109
00:05:09,008 --> 00:05:11,509
在左边的图片中，那就是标题。

110
00:05:11,578 --> 00:05:14,545
然后消息只是一个简短的信息消息

111
00:05:14,614 --> 00:05:17,081
告诉你现在发生了什么事情。

112
00:05:17,150 --> 00:05:19,084
然后在那里喜欢的风格，

113
00:05:19,152 --> 00:05:22,354
如果您设置为action sheet，您将获得一个action sheet。

114
00:05:22,422 --> 00:05:24,622
如果你设置为.alert，你将得到一个alert

115
00:05:24,691 --> 00:05:25,523
我会告诉你的。

116
00:05:25,592 --> 00:05:28,894
所以这些API基本上是相同的，除了

117
00:05:28,962 --> 00:05:32,997
这一个小小的首选风格的东西就在那里。

118
00:05:33,066 --> 00:05:35,733
所以一旦你创建了你的alert，你想添加按钮。

119
00:05:35,802 --> 00:05:39,103
现在添加按钮到你的alert或action sheet，

120
00:05:39,172 --> 00:05:40,805
通过添加操作完成。

121
00:05:40,874 --> 00:05:45,677
而添加操作的参数是一个UI alert action对象。

122
00:05:45,746 --> 00:05:48,580
而UIAlertAction是用标题创建的。

123
00:05:48,648 --> 00:05:51,149
这就是按钮的标题。

124
00:05:51,217 --> 00:05:53,752
一种风格，我们将谈论什么样的风格，

125
00:05:53,820 --> 00:05:54,952
按钮样式是。

126
00:05:55,021 --> 00:05:56,020
然后一个处理程序。

127
00:05:56,089 --> 00:05:58,890
现在，这个处理程序只是一个你提供的闭包。

128
00:05:58,959 --> 00:06:01,592
这是处理程序，如果这样处理

129
00:06:01,661 --> 00:06:04,162
按钮被按下，这就是模型

130
00:06:04,231 --> 00:06:05,864
警报，这不可能简单。

131
00:06:05,932 --> 00:06:08,933
所以我们来看一个例子，我们得到了轨道土星吧

132
00:06:09,002 --> 00:06:11,102
那里，看到标题是轨道土星。

133
00:06:11,171 --> 00:06:14,773
风格，这种风格叫做.default。

134
00:06:14,841 --> 00:06:18,376
所以默认风格，文字不会红，好的，

135
00:06:18,444 --> 00:06:21,646
它会是你进行的任何颜色

136
00:06:21,715 --> 00:06:23,648
你的应用程序，通常蓝色。

137
00:06:23,716 --> 00:06:26,684
然后在我的闭包中，这轨道就是土星

138
00:06:26,753 --> 00:06:29,287
我要在土星周围进入轨道。

139
00:06:29,356 --> 00:06:32,556
那就是卡西尼的任务，要去轨道

140
00:06:32,625 --> 00:06:36,160
土星，所以它只是要做，如果我点击那个按钮。

141
00:06:36,229 --> 00:06:38,096
让我们添加另一个按钮，

142
00:06:38,164 --> 00:06:41,132
这个人探索泰坦，一个月亮在那里。

143
00:06:41,200 --> 00:06:44,101
这是一个有点外面，它在卡西尼的内部

144
00:06:44,170 --> 00:06:45,804
任务，但在我们转移它之前，

145
00:06:45,872 --> 00:06:48,373
我们想确保我们将以登录为例。

146
00:06:48,442 --> 00:06:50,509
所以在我的闭包中，我看到我已经登录，

147
00:06:50,577 --> 00:06:53,244
确保我在登录之前先输入。

148
00:06:53,313 --> 00:06:54,212
但这是同样的事情，

149
00:06:54,281 --> 00:06:56,615
一个默认按钮。

150
00:06:56,683 --> 00:06:58,149
好的，所以我们有这两个默认按钮，

151
00:06:58,218 --> 00:06:59,183
蓝色的。

152
00:06:59,252 --> 00:07:02,854
太阳按钮的特写怎么样

153
00:07:02,923 --> 00:07:05,190
现在如果卡西尼关上阳光，

154
00:07:05,259 --> 00:07:08,259
它将被破坏，它没有足够的

155
00:07:08,328 --> 00:07:11,529
推进在那里逃避太阳的重力。

156
00:07:11,598 --> 00:07:15,132
所以我做了这个按钮的风格是破坏性的，

157
00:07:15,201 --> 00:07:16,801
而不是.default。

158
00:07:16,869 --> 00:07:20,004
所以在一个action sheet中的破坏性会变成

159
00:07:20,073 --> 00:07:22,540
变红了，只是让用户知道“

160
00:07:22,609 --> 00:07:25,977
这可能是我应该仔细的“。

161
00:07:26,046 --> 00:07:28,446
任何时候你都有破坏性的action

162
00:07:28,514 --> 00:07:31,382
在你的闭包，你可能想要确认

163
00:07:31,451 --> 00:07:33,918
这真的要做这个破坏性的action。

164
00:07:33,987 --> 00:07:37,188
在这种情况下，例如我要让他们重新登录

165
00:07:37,257 --> 00:07:38,722
或类似的东西。

166
00:07:38,791 --> 00:07:40,157
这是破坏性的，

167
00:07:40,226 --> 00:07:42,893
那么最后我们得到了底部的取消按钮，

168
00:07:42,962 --> 00:07:45,530
这是另一种类型的称为取消样式的按钮

169
00:07:45,599 --> 00:07:47,999
你可以看到它看起来有点不同，

170
00:07:48,067 --> 00:07:50,435
它与其他按钮有点分离。

171
00:07:50,503 --> 00:07:52,604
事实上，这并不是破坏性的

172
00:07:52,672 --> 00:07:56,007
破坏性，它让你摆脱了问题。

173
00:07:56,075 --> 00:07:56,974
在这个action sheet中，

174
00:07:57,043 --> 00:07:58,609
回到你之前的任何地方，

175
00:07:58,678 --> 00:08:01,079
你不会重新部署卡西尼。

176
00:08:01,148 --> 00:08:03,014
而且，它分开了。

177
00:08:03,083 --> 00:08:05,350
它只是一点点亮点。

178
00:08:08,655 --> 00:08:10,988
所以我已经添加了所有的动作，我有按钮和

179
00:08:11,057 --> 00:08:15,026
现在我想让这个动作列表出现在屏幕上。

180
00:08:15,095 --> 00:08:17,495
我用正常的方法做到这一点

181
00:08:17,564 --> 00:08:20,031
我们以前谈过，这是现在的。

182
00:08:20,099 --> 00:08:24,201
记住，present是一个视图控制器的方法

183
00:08:24,270 --> 00:08:28,172
使用任何模态呈现新的控制器

184
00:08:28,241 --> 00:08:30,808
在该视图控制器中设置演示样式

185
00:08:30,877 --> 00:08:33,612
默认是模态。

186
00:08:33,680 --> 00:08:37,915
所以动作片在底部滑动

187
00:08:37,984 --> 00:08:41,386
它正在模拟地呈现。

188
00:08:43,657 --> 00:08:45,623
所以iPhone看起来不错

189
00:08:45,692 --> 00:08:47,058
在iPad上呢

190
00:08:47,127 --> 00:08:49,627
如果那个巨大的，如果是这样的话，这将是可怕的

191
00:08:49,696 --> 00:08:51,896
一路上iPad的宽度上来了。

192
00:08:51,965 --> 00:08:54,498
或者如果它在中间只是微小的只是看起来

193
00:08:54,567 --> 00:08:55,533
不在地方。

194
00:08:55,601 --> 00:09:00,605
所以当然在iPad上，我们把这个action sheet放在一个流行音乐中

195
00:09:00,674 --> 00:09:02,207
无论什么按钮都会导致我们这样做

196
00:09:02,208 --> 00:09:03,741
过度。

197
00:09:03,810 --> 00:09:06,677
决定，这是我们将要拥有的按钮

198
00:09:06,746 --> 00:09:08,213
小箭头指向。

199
00:09:08,282 --> 00:09:10,782
那么我们如何做这个工作呢？

200
00:09:10,850 --> 00:09:12,650
我们使用模态风格呈现此alert。

201
00:09:12,651 --> 00:09:14,451
因为现在，

202
00:09:14,521 --> 00:09:16,821
所以iPad会出现模态

203
00:09:16,890 --> 00:09:17,555
它会看起来很可怕

204
00:09:17,623 --> 00:09:19,857
相反，我们只需要去

205
00:09:19,926 --> 00:09:23,961
改变我们的action sheet MVC这里有一个模态

206
00:09:24,030 --> 00:09:27,132
pop over的演示风格。

207
00:09:27,200 --> 00:09:29,900
这意味着它仍然会呈现模态但流行。

208
00:09:29,969 --> 00:09:31,802
流行起来基本上是模态的，但是

209
00:09:31,871 --> 00:09:33,838
不同的演示风格。

210
00:09:35,008 --> 00:09:36,941
当然，当它弹出时，

211
00:09:37,010 --> 00:09:39,911
我们希望小箭头指向重新部署

212
00:09:39,979 --> 00:09:42,147
按钮在我的bar按钮项目那里。

213
00:09:42,215 --> 00:09:44,716
所以我们要用同样的pop over来做

214
00:09:44,784 --> 00:09:47,719
演示控制器，我们设置最后的代理

215
00:09:47,788 --> 00:09:49,921
时间，所以我们可以控制适应。

216
00:09:49,990 --> 00:09:52,056
请记住，从演示？

217
00:09:52,125 --> 00:09:54,693
所以我们要用同样的popover演示

218
00:09:54,761 --> 00:09:57,295
控制器，这一次我们要设置吧

219
00:09:57,363 --> 00:09:59,798
按钮项目作为重新部署的按钮项目，和

220
00:09:59,866 --> 00:10:02,900
演示端口演示控制器是

221
00:10:02,969 --> 00:10:05,737
聪明地知道“我要做我的小箭头

222
00:10:05,805 --> 00:10:07,071
指出“。

223
00:10:07,140 --> 00:10:09,507
而正如我之前所说的演示控制器所说，

224
00:10:09,576 --> 00:10:12,076
你也可以把任意的小箭头点

225
00:10:12,145 --> 00:10:14,379
在视图中或按钮处。

226
00:10:16,182 --> 00:10:17,915
就这样吧。

227
00:10:17,984 --> 00:10:20,885
现在，如果我们把这段代码放在那里，这个alert就会发生什么

228
00:10:20,954 --> 00:10:23,454
模式，模式演示popover和我们尝试和

229
00:10:23,523 --> 00:10:25,824
（顺便说一句，应该是小写p popover那里）。

230
00:10:25,892 --> 00:10:29,393
我们现在试着在iPhone上运行它，

231
00:10:29,462 --> 00:10:32,797
它会在那里看起来像什么？

232
00:10:32,866 --> 00:10:35,300
它会像以前一样看起来完全一样。

233
00:10:35,368 --> 00:10:36,834
为什么是这样？

234
00:10:36,903 --> 00:10:38,803
适应，对吧？

235
00:10:38,872 --> 00:10:42,674
它会适应于在这种情况下我们有的事实

236
00:10:42,742 --> 00:10:45,543
水平紧凑的环境。

237
00:10:45,612 --> 00:10:47,445
它不会把它放在一个popover。

238
00:10:47,513 --> 00:10:49,346
所以这是一个自动适应，

239
00:10:49,415 --> 00:10:50,681
同样的事情，我们以前。

240
00:10:50,750 --> 00:10:52,216
所以看起来不错

241
00:10:52,285 --> 00:10:53,752
所以如果你有一个普遍的应用程序，

242
00:10:53,820 --> 00:10:56,654
你显然会把这个小popover代码

243
00:10:56,722 --> 00:11:00,058
在那里，它会在你的其他设备上看起来很好。

244
00:11:00,127 --> 00:11:03,928
那就是action sheet，怎么样呢？

245
00:11:03,996 --> 00:11:07,264
同样的事情，基本上我们只会说这个

246
00:11:07,333 --> 00:11:10,034
在这种情况下，首选样式是alert的。

247
00:11:10,103 --> 00:11:13,504
在这里我会在那里添加一个取消按钮。

248
00:11:13,573 --> 00:11:18,976
我要添加一个登录按钮。

249
00:11:19,045 --> 00:11:22,546
而且我也要添加一个文本字段给这个，

250
00:11:22,615 --> 00:11:24,082
所以这里是如何添加一个新的文本字段。

251
00:11:24,150 --> 00:11:28,452
我只是对MVC说，提醒MVC，addTextField。

252
00:11:28,521 --> 00:11:31,022
请注意，我可以有一个闭包

253
00:11:31,091 --> 00:11:34,391
包括配置该文本字段。

254
00:11:34,460 --> 00:11:36,093
设置占位符文本。

255
00:11:36,162 --> 00:11:39,029
实际上，这看起来像一个密码，所以我可能会

256
00:11:39,098 --> 00:11:41,866
想要在那里打开安全文本，这样的事情。

257
00:11:41,935 --> 00:11:45,336
可能会使用尾部闭包语法

258
00:11:45,405 --> 00:11:46,804
而不是使用整个事情，而是

259
00:11:46,873 --> 00:11:48,172
我只是想让你看到这个参数，

260
00:11:48,241 --> 00:11:49,674
它被称为配置处理程序，

261
00:11:49,743 --> 00:11:50,341
这是它的作用。

262
00:11:50,410 --> 00:11:51,743
它配置文本字段。

263
00:11:51,811 --> 00:11:54,578
如果需要，您可以添加多个文本字段。

264
00:11:54,647 --> 00:11:58,983
然后，你在你的action中得到文字的方式，

265
00:11:59,052 --> 00:12:02,119
这是一种登录按钮的操作。

266
00:12:02,188 --> 00:12:05,590
我会得到警报并要求其文本字段，

267
00:12:05,658 --> 00:12:07,091
这是一个文本字段的数组，

268
00:12:07,159 --> 00:12:08,726
我说你可以有多个文本字段。

269
00:12:08,795 --> 00:12:11,929
我会把第一个从那里拿出来，

270
00:12:11,998 --> 00:12:13,164
我只有一个。

271
00:12:13,232 --> 00:12:15,566
我可以在零下和分一下，无论如何，

272
00:12:15,635 --> 00:12:17,035
取决于我有多少。

273
00:12:17,103 --> 00:12:18,970
而且，我会把文本从它中删除。

274
00:12:21,040 --> 00:12:22,707
所以现在我有文本到其他文字，等等

275
00:12:22,776 --> 00:12:23,475
真的很容易

276
00:12:25,411 --> 00:12:26,778
所以我们来看看TextField的工作。

277
00:12:28,147 --> 00:12:32,550
再次以alert的风格，我们只是以模态地呈现。

278
00:12:32,619 --> 00:12:33,384
现在，在这种情况下，

279
00:12:33,453 --> 00:12:37,187
我们不会将其显示在iPad上的popover中。

280
00:12:37,256 --> 00:12:40,090
所以，它看起来完全一样在iPhone上，一个小盒子

281
00:12:40,159 --> 00:12:43,228
在中间，这是可以的，它实际上看起来不错。

282
00:12:44,697 --> 00:12:47,331
所以没有什么特别的警戒情况。

283
00:12:47,400 --> 00:12:49,667
就这样，那就是警报和动作单。

284
00:12:49,735 --> 00:12:51,102
我有一个演示

285
00:12:51,171 --> 00:12:52,102
面对这里

286
00:12:52,171 --> 00:12:53,404
告诉你这是什么样子。

287
00:12:54,574 --> 00:12:56,775
编码这个。

288
00:12:56,843 --> 00:12:58,876
在这里，我们在我们前面的FaceIt。

289
00:12:58,945 --> 00:13:00,311
看看我要在这里做什么

290
00:13:00,380 --> 00:13:04,715
所以我在这里按下我的添加按钮

291
00:13:04,784 --> 00:13:07,084
做这个漂亮的编辑器MVC。

292
00:13:07,153 --> 00:13:09,287
如果我刚刚完成，这里会发生什么？

293
00:13:10,423 --> 00:13:10,922
没有。

294
00:13:10,990 --> 00:13:11,990
它没有工作。

295
00:13:13,126 --> 00:13:14,025
这很奇怪。

296
00:13:14,093 --> 00:13:14,692
我会再尝试。

297
00:13:16,095 --> 00:13:17,395
让我们尝试一下笑容。

298
00:13:17,463 --> 00:13:18,229
眯眼。

299
00:13:18,298 --> 00:13:18,863
完成。

300
00:13:20,399 --> 00:13:21,699
我刚刚做了这个工作。

301
00:13:21,768 --> 00:13:22,733
这是怎么回事。实际上，

302
00:13:22,802 --> 00:13:26,871
这样做，因为看，它在这里增加了一个。

303
00:13:26,940 --> 00:13:28,873
只是这个名字是空白的。

304
00:13:30,443 --> 00:13:33,511
我去了这里，我打完了，我没有打个名字。

305
00:13:33,580 --> 00:13:36,213
所以回来，这个UI真的很糟糕，

306
00:13:36,282 --> 00:13:38,182
因为它“工作”。

307
00:13:38,251 --> 00:13:40,818
但是，现在很清楚用户的意图，因为有

308
00:13:40,887 --> 00:13:42,954
空白线，他们甚至不能区分差异

309
00:13:43,022 --> 00:13:44,889
之间有什么东西有没有。

310
00:13:44,958 --> 00:13:47,791
所以我们想要的是，当我们在这里点击完成时，

311
00:13:47,860 --> 00:13:50,327
如果你愿意，我们想提出alert

312
00:13:50,396 --> 00:13:52,197
没有给一个名字。

313
00:13:52,265 --> 00:13:53,831
也许我们甚至会把一个文本字段放在和

314
00:13:53,900 --> 00:13:55,433
让您在alert中键入名称。

315
00:13:55,501 --> 00:13:58,602
这是一个有问题的UI，但它对演示有好处。

316
00:13:58,671 --> 00:13:59,470
这就是我们要做的。

317
00:13:59,539 --> 00:14:02,273
所以我们要在这里完成这个按钮，

318
00:14:02,342 --> 00:14:05,677
如果名称字段为空，则发出alert。

319
00:14:07,079 --> 00:14:07,845
那我们怎么做呢？

320
00:14:07,913 --> 00:14:12,583
我们来编辑MVC，这里是代码

321
00:14:12,652 --> 00:14:13,284
我们的编辑。

322
00:14:13,353 --> 00:14:15,152
请记住这里的代码。

323
00:14:15,221 --> 00:14:16,621
很简单

324
00:14:16,689 --> 00:14:21,725
我会做什么，我想防止放松，

325
00:14:21,794 --> 00:14:24,295
这样做放纵了，我想阻止它

326
00:14:24,364 --> 00:14:27,164
如果名称为空，则会发生。

327
00:14:27,233 --> 00:14:28,933
那么我该如何防止这样的情况呢？

328
00:14:30,303 --> 00:14:32,203
我添加的方法是什么？

329
00:14:34,140 --> 00:14:36,707
我听到耳语，是的，我想我听到了。

330
00:14:36,776 --> 00:14:39,476
应该执行segue，记住那一个，

331
00:14:39,545 --> 00:14:43,514
应该执行segue，所以应该执行segue与标识符。

332
00:14:43,583 --> 00:14:45,182
我会实现的。

333
00:14:45,251 --> 00:14:49,621
我只是说如果标识符是我的unwind。

334
00:14:49,689 --> 00:14:52,323
有谁记得我们的标识符是什么？

335
00:14:52,391 --> 00:14:53,357
我们去看看吧

336
00:14:53,426 --> 00:14:55,726
我们可以提醒自己我们如何找到它。

337
00:14:55,795 --> 00:14:58,662
所以，这是在这里退出。

338
00:14:58,731 --> 00:15:01,899
现在，我们当然不会看到我们的unwind segues

339
00:15:01,968 --> 00:15:03,901
作为这些小箭头线。

340
00:15:03,970 --> 00:15:07,071
我们不得不在这里看看我们的文件大纲。

341
00:15:07,139 --> 00:15:10,741
并点击这个MVC，看看右下角的那个，

342
00:15:10,810 --> 00:15:15,079
展开段，segue添加情感，我们称之为。

343
00:15:15,148 --> 00:15:17,114
当我们点击检查员时，我们会看到它

344
00:15:17,183 --> 00:15:21,719
我们称之为“添加情绪”，这是该段的标识符。

345
00:15:21,788 --> 00:15:23,987
所以现在我们知道我们所谓的“

346
00:15:24,056 --> 00:15:24,755
我们来看看吧。

347
00:15:24,824 --> 00:15:28,726
所以如果标识符是Add Emotion，和

348
00:15:28,795 --> 00:15:34,131
如果我们的名字是空的，那么我们想返回false。

349
00:15:34,200 --> 00:15:37,302
如果是这样，我们不想允许发生变化

350
00:15:37,370 --> 00:15:40,337
空，否则我们要回来？

351
00:15:40,406 --> 00:15:44,275
那么有些人会错误的返回true。

352
00:15:44,344 --> 00:15:46,043
但是你不想在那里返回true，

353
00:15:46,112 --> 00:15:50,915
你想返回超级应该执行segue。

354
00:15:50,984 --> 00:15:53,584
因为你想给你的父类有机会，

355
00:15:53,653 --> 00:15:57,020
它可能有一些变化，你想给它一个机会。

356
00:15:57,089 --> 00:16:00,591
看看是否允许这个特定的标识符。

357
00:16:00,659 --> 00:16:03,294
所以不要忘记，当你超越这些东西的时候

358
00:16:03,363 --> 00:16:06,863
不要返回true的给你父类的机会。

359
00:16:06,932 --> 00:16:10,501
所以让我们来看看这是做什么，我们还没做

360
00:16:10,569 --> 00:16:14,137
任何alert在这里显然我们只是阻止这样做。

361
00:16:14,206 --> 00:16:17,441
我们来看看甚至在那里工作。

362
00:16:17,509 --> 00:16:21,679
添加，我没有在这里放一个名字，完成并关闭。

363
00:16:21,747 --> 00:16:25,750
它没有放松，看到这也是可怕的UI。

364
00:16:25,819 --> 00:16:28,886
用户会认为不，删除这个应用程序，

365
00:16:28,954 --> 00:16:30,287
它不工作

366
00:16:30,356 --> 00:16:33,324
这是一个破碎的应用程序，我在这里点击这个按钮。

367
00:16:33,392 --> 00:16:35,292
没有做任何事情，忘记了。

368
00:16:35,361 --> 00:16:37,395
所以你永远不想有一个你喜欢的UI

369
00:16:37,463 --> 00:16:39,129
一个按钮，它什么都不做，

370
00:16:39,198 --> 00:16:43,901
这是非常糟糕的UI，所以永远不要这样做。

371
00:16:43,970 --> 00:16:47,604
相反，我们想做一个alert，所以我要创建

372
00:16:47,673 --> 00:16:51,141
有一点功能把所有这些alert的东西放进去，

373
00:16:51,210 --> 00:16:54,979
私人funk我们称之为处理未命名的脸。

374
00:16:55,047 --> 00:16:56,947
在那里，我们会做出我们的警惕的事情

375
00:16:57,016 --> 00:16:58,316
我要在这里做，

376
00:16:58,384 --> 00:17:00,051
我要处理这个UnnamedFace。

377
00:17:00,119 --> 00:17:03,387
当我还是要阻止这个segway，因为我不能

378
00:17:03,456 --> 00:17:05,656
当这个名字是空的时，做segway。

379
00:17:05,725 --> 00:17:07,358
所以我还会回来，但我是

380
00:17:07,426 --> 00:17:09,727
在这里一路处理这个UnnamedFace。

381
00:17:10,863 --> 00:17:12,430
所以这里处理未命名的脸，

382
00:17:12,499 --> 00:17:17,935
我想要一个alert 简单的 alert = UIAlertController。

383
00:17:18,004 --> 00:17:21,105
这里是这里的标题，标题。

384
00:17:21,174 --> 00:17:24,375
让我们的标题就像无效的脸

385
00:17:24,443 --> 00:17:26,777
和消息，人类有很多好东西

386
00:17:26,846 --> 00:17:28,813
接口指南关于这里的消息。

387
00:17:28,881 --> 00:17:31,616
你不想用这些alert来alert你的用户

388
00:17:31,684 --> 00:17:32,683
消息。

389
00:17:32,751 --> 00:17:34,718
我们想要对他们很好，所以我们只是想要

390
00:17:34,787 --> 00:17:37,154
好好解释一下怎么样

391
00:17:37,223 --> 00:17:39,556
我们只要有一张脸必须有一个名字或

392
00:17:39,625 --> 00:17:42,993
这样的事情，甚至有点苛刻。

393
00:17:43,062 --> 00:17:46,129
但是，我们会说，我们不希望它太长，但是不要

394
00:17:46,198 --> 00:17:49,634
同样的道理，我们不是这样，你知道，简洁而且意味深长。

395
00:17:49,702 --> 00:17:51,635
所以我们有点在中间，所以

396
00:17:51,704 --> 00:17:53,203
我们会说“一个脸必须有一个名字”。

397
00:17:53,272 --> 00:17:54,938
当然这里的风格是什么呢？

398
00:17:55,007 --> 00:17:56,674
是action sheet？

399
00:17:56,743 --> 00:18:01,912
不，它是Alert风格，所以我创建了一个alert。

400
00:18:01,980 --> 00:18:05,349
这是一个视图控制器，这是返回，如果我看

401
00:18:05,417 --> 00:18:08,853
这里的alert类型，它是一个alert控制器，

402
00:18:08,922 --> 00:18:12,022
这是一个UI视图控制器子类。

403
00:18:12,091 --> 00:18:13,924
所以我有这个好东西，

404
00:18:13,993 --> 00:18:16,093
我们只是提出这个，看看会发生什么。

405
00:18:16,162 --> 00:18:21,732
我们现在提醒动画。

406
00:18:21,800 --> 00:18:25,069
是的，我们甚至不需要一个完成处理程序，

407
00:18:25,137 --> 00:18:27,571
我们很少需要完成处理程序。

408
00:18:27,640 --> 00:18:30,808
你知道，它只是告诉你，我已经完成了这个

409
00:18:30,877 --> 00:18:33,211
事情，如果你想做一些你可以做的事情。

410
00:18:36,382 --> 00:18:37,315
我们回到这里

411
00:18:37,383 --> 00:18:40,451
再去这里，我不会把这个名字，完成。

412
00:18:40,520 --> 00:18:41,819
那好点了

413
00:18:41,888 --> 00:18:43,387
我的应用仍然完全破碎，

414
00:18:43,455 --> 00:18:46,924
因为哇，我有这个模态视图控制器，

415
00:18:46,993 --> 00:18:48,725
没有办法摆脱它。

416
00:18:48,794 --> 00:18:49,893
所以我的应用完全死了

417
00:18:49,962 --> 00:18:51,261
脱离这个唯一的办法，

418
00:18:51,330 --> 00:18:53,097
是要杀死应用程序。

419
00:18:53,165 --> 00:18:53,798
所以我们不想要

420
00:18:53,866 --> 00:18:57,801
显然，我们从未想过没有按钮的alert。

421
00:18:57,870 --> 00:19:00,471
所以我们可以给它一个按钮，在这里。

422
00:19:00,540 --> 00:19:04,775
对我们的alert，说alert.addAction记住是

423
00:19:04,844 --> 00:19:09,113
我们怎么做，它有一个UIAlertAction和

424
00:19:09,181 --> 00:19:12,049
让我们看看这里的参数为AlertAction。

425
00:19:12,118 --> 00:19:15,585
我们得到了一个标题，所以我只要放一个OK按钮。

426
00:19:15,654 --> 00:19:17,555
我刚刚告诉你，你真的没有

427
00:19:17,624 --> 00:19:19,123
想要有只有一个按钮的提醒。

428
00:19:19,191 --> 00:19:20,257
但这是一个演示，所以

429
00:19:20,326 --> 00:19:21,925
我只是向你展示如何添加一个按钮。

430
00:19:21,994 --> 00:19:23,160
这是一个确定按钮。

431
00:19:23,229 --> 00:19:24,595
这个样式是默认的，

432
00:19:24,664 --> 00:19:26,763
它只是一个默认按钮，它不是破坏性的，或者

433
00:19:26,832 --> 00:19:27,865
这样的事情

434
00:19:27,934 --> 00:19:31,001
人们可以认为这应该是一个取消。

435
00:19:31,070 --> 00:19:33,437
你会看到我不会像取消一样

436
00:19:33,505 --> 00:19:37,641
出现在第二个然后处理程序，我们不是

437
00:19:37,710 --> 00:19:40,044
做任何事情，当我们点击确定，所以现在让我们再次运行它。

438
00:19:41,514 --> 00:19:43,247
糟糕，在那里有一个括号。

439
00:19:43,316 --> 00:19:44,982
好的，让我们再来一次。

440
00:19:47,352 --> 00:19:48,919
所以这里我们去，我们补充说，

441
00:19:48,988 --> 00:19:52,289
没有一个名字，打完了，出现无效的脸。

442
00:19:52,358 --> 00:19:56,026
一个脸必须有一个名字，现在我回到这里。

443
00:19:56,095 --> 00:19:59,629
这可能是最低限度的，对吧？

444
00:19:59,698 --> 00:20:03,601
这可能很好，用户会马上知道，

445
00:20:03,670 --> 00:20:05,836
我得给它一个名字，他们在这里上来

446
00:20:05,905 --> 00:20:07,772
给它一个名字，一切都会很好。

447
00:20:07,840 --> 00:20:10,841
但是为了向你显示文本字段的alert，怎么样

448
00:20:10,909 --> 00:20:13,577
当这出现时，如果给他们一个文本字段。

449
00:20:13,646 --> 00:20:16,380
让他们输入一个名字，所以他们不必回头，

450
00:20:16,449 --> 00:20:18,281
输入名称，然后单击完成。

451
00:20:18,350 --> 00:20:20,885
他们可以在这里输入名称，然后单击确定。

452
00:20:20,953 --> 00:20:23,987
那么我们如何做到这一点，在我们的警戒中有一件事情，

453
00:20:24,056 --> 00:20:26,524
是我们想添加一个文本字段。

454
00:20:27,860 --> 00:20:30,060
在配置处理程序中，我们可以看出

455
00:20:30,129 --> 00:20:30,928
做任何我们想要的，

456
00:20:30,997 --> 00:20:35,032
我们只会说我们在这里不会有一个配置处理程序。

457
00:20:35,101 --> 00:20:40,671
然后在我们的添加操作中，当用户单击确定时，

458
00:20:40,739 --> 00:20:44,608
我会看那个文字字段，

459
00:20:44,676 --> 00:20:50,213
将文本从它中取出并放在我的名字字段中。

460
00:20:50,282 --> 00:20:53,150
记住，这个处理程序给你本身的动作，

461
00:20:53,218 --> 00:20:54,518
同样的alert动作。

462
00:20:54,586 --> 00:20:56,954
这有点像你有一个委托方法，你会得到

463
00:20:57,023 --> 00:20:59,190
这是在这里委托同样的事情的事情。

464
00:20:59,258 --> 00:21:01,792
这个操作将在处理程序中传递给你，

465
00:21:01,861 --> 00:21:03,160
我们不需要它

466
00:21:03,228 --> 00:21:07,898
我只是说我的self.name/text字段。

467
00:21:10,035 --> 00:21:14,738
其文本等于alert的

468
00:21:14,807 --> 00:21:19,910
文本字段，文本字段，

469
00:21:19,979 --> 00:21:25,782
文字，实际上我猜是这样的

470
00:21:25,851 --> 00:21:30,454
所有我需要做的

471
00:21:34,860 --> 00:21:36,460
文本字段是一个数组。

472
00:21:36,529 --> 00:21:39,797
所以我们来抓住第一个，然后得到它的文字。

473
00:21:39,866 --> 00:21:43,266
所以这是很好的，除了我们介绍这个

474
00:21:43,335 --> 00:21:46,570
事情之前，我们添加的文本字段，这是不好的。

475
00:21:46,639 --> 00:21:50,140
所以我们把它放在这里，再试一次。

476
00:21:50,209 --> 00:21:53,243
好的，去这里，我们完成了。

477
00:21:53,312 --> 00:21:55,246
现在我在这里有一个文本字段，

478
00:21:55,314 --> 00:21:58,715
我们会说Foo是我们想要的名字，我们点击Okay和

479
00:21:58,784 --> 00:22:01,619
它将Foo放在他们的文字字段中，非常好

480
00:22:01,687 --> 00:22:04,121
但是我们仍然让他们回去

481
00:22:04,190 --> 00:22:05,489
再次点击完成，对吧？

482
00:22:05,558 --> 00:22:09,260
因为现在我可以打完，它的作品，得到了这里。

483
00:22:09,328 --> 00:22:11,295
但是，如果我进入这个，这将是非常好的

484
00:22:11,363 --> 00:22:13,396
不知名的情况，我在这里打了一些东西，

485
00:22:13,465 --> 00:22:16,700
我点击好，如果它只是做自动完成。

486
00:22:16,769 --> 00:22:20,470
有没有人记得我们如何执行代码？

487
00:22:20,539 --> 00:22:21,271
Cuz这是我们需要做的，

488
00:22:21,340 --> 00:22:24,008
我们需要从我们的代码中执行展开。

489
00:22:26,579 --> 00:22:29,046
我会在我的动作处理程序中这样做，

490
00:22:29,115 --> 00:22:32,949
我只会说self.performSegue。

491
00:22:33,018 --> 00:22:36,720
究竟你会想什么和标识符？

492
00:22:36,788 --> 00:22:38,221
这是增添情感，

493
00:22:38,290 --> 00:22:40,890
这是unwind segue和sender。

494
00:22:40,959 --> 00:22:42,092
我真的不在乎发件人是谁，

495
00:22:42,161 --> 00:22:43,326
我在准备中不要看，

496
00:22:43,395 --> 00:22:45,029
我不需要它任何理由

497
00:22:47,065 --> 00:22:48,366
这就是所需要的。

498
00:22:50,402 --> 00:22:51,001
这是一个很好的机会

499
00:22:51,069 --> 00:22:53,771
我来表示你执行segue，从代码中删除。

500
00:22:57,843 --> 00:22:59,409
一切都完成了，我们来这里。

501
00:22:59,478 --> 00:23:02,546
让我们做我们最喜欢的一个是满足的

502
00:23:02,615 --> 00:23:04,948
在那里，所以我没有把这个名字放在这里。

503
00:23:05,017 --> 00:23:08,952
做完，脸必须有一个名字，我会说内容。

504
00:23:09,021 --> 00:23:11,521
我们点击Okay，它回来了。

505
00:23:11,590 --> 00:23:16,226
在这里，大家懂得“alert”吗？

506
00:23:16,295 --> 00:23:19,663
alert非常简单的实现，action sheet是

507
00:23:19,732 --> 00:23:22,099
几乎完全一样的方式，没有文字字段。

508
00:23:22,167 --> 00:23:24,935
显然，在一个action sheet中，但是

509
00:23:25,004 --> 00:23:27,971
在这种情况下，您只需添加更多操作。

510
00:23:28,040 --> 00:23:31,008
好的，回到我们的幻灯片。

511
00:23:35,114 --> 00:23:40,317
接下来我们要谈论的是通知。

512
00:23:40,386 --> 00:23:43,554
通知是MVC中的电台

513
00:23:43,622 --> 00:23:47,091
我在第四季度开始就说了一句话。

514
00:23:49,228 --> 00:23:50,527
这是我们可以，基本上，

515
00:23:50,596 --> 00:23:55,332
广播信息盲目地与其他物体在我们的

516
00:23:55,400 --> 00:23:58,602
应用程序，并让他们调用，如果他们有兴趣。

517
00:23:58,670 --> 00:24:00,905
那我们怎么做呢？

518
00:24:00,973 --> 00:24:03,473
这是通知工作的关键

519
00:24:03,542 --> 00:24:06,576
类叫NotificationCenter。

520
00:24:06,645 --> 00:24:10,080
所以有一个默认的NotificationCenter，

521
00:24:10,148 --> 00:24:14,485
您可以通过访问名为default的静态栏获得

522
00:24:14,553 --> 00:24:15,985
在NotificationCenter上。

523
00:24:16,054 --> 00:24:17,521
所以你有NotificationCenter.default

524
00:24:17,590 --> 00:24:20,257
给你这个默认通知中心。

525
00:24:20,326 --> 00:24:23,126
一旦你有默认的话，你可以做两件事情

526
00:24:23,195 --> 00:24:24,160
通知中心？

527
00:24:24,229 --> 00:24:27,331
您可以注册收听广播或

528
00:24:27,400 --> 00:24:29,099
你可以广播

529
00:24:29,167 --> 00:24:30,600
现在你能做什么，

530
00:24:30,669 --> 00:24:35,539
超级简单的API真的他们做得很好，这个。

531
00:24:35,608 --> 00:24:39,143
首先让我们来谈谈你如何注册听，

532
00:24:39,211 --> 00:24:41,344
你想听某个广播电台。

533
00:24:41,413 --> 00:24:43,947
这是通过此方法完成的，您将发送到默认值

534
00:24:44,016 --> 00:24:46,717
通知中心称为观察者。

535
00:24:46,785 --> 00:24:47,984
所以添加观察者的意思

536
00:24:48,053 --> 00:24:50,020
我正在听这个电台。

537
00:24:50,089 --> 00:24:52,288
有三个参数，第一个是

538
00:24:52,357 --> 00:24:55,926
名字是电台的名字。

539
00:24:55,994 --> 00:24:58,161
现在的类型是NSNotification.name。

540
00:24:58,230 --> 00:24:59,963
我马上讲讲这个，但是

541
00:25:00,032 --> 00:25:02,833
那只是广播电台的名字你听什么

542
00:25:02,902 --> 00:25:05,368
第二个参数是object：Any？

543
00:25:05,437 --> 00:25:11,909
基本上，在某种意义上，发送者，广播公司。

544
00:25:11,977 --> 00:25:12,876
如果你只听，

545
00:25:12,945 --> 00:25:15,279
对广播电台感兴趣

546
00:25:15,347 --> 00:25:17,881
一个对象，那么你可以把东西放在那里。

547
00:25:17,950 --> 00:25:20,850
如果你把它放在那里，那就意味着有人在那里播放

548
00:25:20,919 --> 00:25:22,419
广播电台，我有兴趣

549
00:25:23,823 --> 00:25:25,055
所以这只是缩小的一种方式。

550
00:25:25,124 --> 00:25:27,624
广播电台是有点奇怪，你可以有

551
00:25:27,693 --> 00:25:30,660
多人在同一站播放。

552
00:25:30,729 --> 00:25:33,997
它不像一个真正的电台，只有一个

553
00:25:34,066 --> 00:25:35,632
广播电台。

554
00:25:35,701 --> 00:25:37,267
然后第三个参数是一个队列，

555
00:25:37,336 --> 00:25:39,603
（实际上是四个参数，我猜）

556
00:25:39,672 --> 00:25:42,439
第三个参数是你要运行的队列

557
00:25:42,507 --> 00:25:43,407
这个闭包了。

558
00:25:43,475 --> 00:25:45,442
第四个论点是闭包。

559
00:25:45,511 --> 00:25:47,644
所以你注册这个广播电台和

560
00:25:47,712 --> 00:25:51,281
当有广播时，这个闭包可以执行。

561
00:25:51,350 --> 00:25:52,516
那个队列是

562
00:25:52,585 --> 00:25:54,984
闭包可以执行什么队列。

563
00:25:55,053 --> 00:25:56,720
如果你说，没有，顺便说一句

564
00:25:56,788 --> 00:26:00,290
那个队列在同一个队列中被执行

565
00:26:00,359 --> 00:26:04,094
广播电台正在广播，但是

566
00:26:04,163 --> 00:26:06,830
经常在这里你会做UI的东西。

567
00:26:06,899 --> 00:26:10,467
在这种情况下，您需要在这里放入operation.mainqueue。

568
00:26:10,535 --> 00:26:13,036
我认为是，这是被称之为。

569
00:26:13,105 --> 00:26:15,372
你显然需要在主队排队

570
00:26:15,441 --> 00:26:16,973
做任何UI工作。

571
00:26:17,042 --> 00:26:18,775
所以在这个闭包中，你可以看到有一个

572
00:26:18,844 --> 00:26:21,077
参数是通知。

573
00:26:21,146 --> 00:26:24,080
那就是广播包，

574
00:26:24,149 --> 00:26:27,150
如果你想想它是广播，和

575
00:26:27,219 --> 00:26:29,653
里面有几件事，但真的

576
00:26:29,721 --> 00:26:32,689
重要的是用户信息。

577
00:26:32,758 --> 00:26:34,758
看到notification.userInfo。

578
00:26:34,827 --> 00:26:37,660
这是广播公司的字典

579
00:26:37,729 --> 00:26:40,497
可以提供他们想要的任何信息

580
00:26:40,566 --> 00:26:42,299
正在听这个广播电台的人。

581
00:26:43,836 --> 00:26:46,236
我们会有一些例子来看看什么样的东西人

582
00:26:46,305 --> 00:26:47,904
放入他们的用户信息。

583
00:26:47,973 --> 00:26:50,607
就这样，超级直截了当。

584
00:26:50,676 --> 00:26:52,842
这是你听广播电台的方式。

585
00:26:52,911 --> 00:26:56,313
所以让我们看看，在我向大家展示一个例子之前，

586
00:26:56,382 --> 00:26:58,148
让我们来谈谈NSNotification.Name。

587
00:26:59,518 --> 00:27:01,552
它的类型像这样真的很好，

588
00:27:01,620 --> 00:27:05,088
他们真的打了iOS 10

589
00:27:05,157 --> 00:27:08,992
所有的东西以前只是字符串，已经被类型了

590
00:27:09,061 --> 00:27:11,061
你知道你在找什么类型的东西。

591
00:27:11,130 --> 00:27:15,431
NSNotification.Name，真的很酷，

592
00:27:15,500 --> 00:27:16,966
是如果你去看文档，

593
00:27:17,035 --> 00:27:20,103
对于NSNotification.Name，你会看到所有

594
00:27:20,172 --> 00:27:23,906
iOS将广播的广播电台。

595
00:27:23,975 --> 00:27:25,875
还有很多他们。

596
00:27:25,944 --> 00:27:28,412
但是，这是一个快速学习什么收音机的好方法

597
00:27:28,480 --> 00:27:31,315
IOS内置了车站。

598
00:27:33,218 --> 00:27:36,286
它们都是静态变量，这些电台的这些名字

599
00:27:36,355 --> 00:27:38,255
是NSNOtification.Name中的静态变量。

600
00:27:38,323 --> 00:27:41,458
现在你可以创建自己的NSNotification.Name，因为

601
00:27:41,527 --> 00:27:43,727
创建自己的广播电台是完全合法的

602
00:27:43,795 --> 00:27:45,128
如果你想要广播

603
00:27:45,197 --> 00:27:48,565
您只需使用字符串初始化程序即可

604
00:27:48,634 --> 00:27:50,667
类型NSNotification.Name。

605
00:27:50,736 --> 00:27:53,904
NSNotification.Name，希望现在你熟悉了

606
00:27:53,973 --> 00:27:55,204
阅读你的阅读作业和

607
00:27:55,273 --> 00:27:58,142
东西，它只是一个嵌套的类，名字，

608
00:27:58,210 --> 00:28:01,878
这是NSNotification中的指示或内容。

609
00:28:01,947 --> 00:28:06,483
这就是NSNotification.Name的原因。

610
00:28:06,551 --> 00:28:08,886
所以我会再谈一下广播。

611
00:28:08,954 --> 00:28:11,688
但首先我想给你一个听力的例子。

612
00:28:11,756 --> 00:28:15,058
所以这里是一个广播电台，叫做一个系统电台

613
00:28:15,127 --> 00:28:17,361
UIContentSizeCategoryDidCha- nge，

614
00:28:17,429 --> 00:28:19,829
你会看到它在那里的forName。

615
00:28:19,898 --> 00:28:23,032
这样，如果你进入你的设置应用程序在你的手机和

616
00:28:23,101 --> 00:28:27,271
进入可访问性，你会看到有一个文本大小

617
00:28:27,339 --> 00:28:29,806
设置，看起来像右边的东西，

618
00:28:29,875 --> 00:28:31,374
您可以在其中设置文本的大小。

619
00:28:31,443 --> 00:28:34,110
所以当你像我一样老，你可以做文本

620
00:28:34,179 --> 00:28:34,845
有点大一点

621
00:28:34,913 --> 00:28:37,214
仍然看不到任何阅读眼镜。

622
00:28:37,282 --> 00:28:39,315
当你的年轻人喜欢你，你可以使它真的很小

623
00:28:39,384 --> 00:28:42,152
你可以在屏幕上获得更多的文字。

624
00:28:42,221 --> 00:28:46,389
所以，当它改变了所有的应用程序

625
00:28:46,458 --> 00:28:50,460
找出它们，然后每个人都在当地广播

626
00:28:50,529 --> 00:28:51,928
这个广播电台。

627
00:28:51,997 --> 00:28:53,530
现在，广播电台只用于

628
00:28:53,599 --> 00:28:55,732
广播您的应用程序

629
00:28:55,800 --> 00:28:59,803
所以从iOS的操作系统的沟通

630
00:28:59,872 --> 00:29:03,106
对于这种改变的应用程序正在以其他方式发生。

631
00:29:03,174 --> 00:29:04,841
你不知道是什么，它是幕后的，

632
00:29:04,909 --> 00:29:05,842
你不在乎

633
00:29:05,910 --> 00:29:09,245
但是当一个应用程序发现这个滑块已经改变了，

634
00:29:09,314 --> 00:29:12,682
它在本广播台上本地广播UI内容大小

635
00:29:12,751 --> 00:29:13,817
类别确实改变了。

636
00:29:13,886 --> 00:29:16,887
因为那些小的，那个滑块实际上有，像，

637
00:29:16,956 --> 00:29:19,956
那里的烙印，不只是，

638
00:29:20,025 --> 00:29:21,391
点大小或字体。

639
00:29:21,460 --> 00:29:25,161
它是小，中，大，超大，

640
00:29:25,230 --> 00:29:26,396
额外超大。

641
00:29:26,464 --> 00:29:30,366
所以，当你滑过这个东西。

642
00:29:30,435 --> 00:29:31,968
所以如果我想听听这个变化，

643
00:29:32,037 --> 00:29:34,404
现在为什么要听到这种变化？

644
00:29:34,473 --> 00:29:37,140
我不需要从我的字体听到它，因为

645
00:29:37,209 --> 00:29:38,575
我是一个好的程序员

646
00:29:38,643 --> 00:29:42,112
我正在使用我的UI中的文本样式。

647
00:29:42,180 --> 00:29:44,214
记得我们去UI的时候

648
00:29:44,283 --> 00:29:47,350
我们将文本样式设置为像正文字体或

649
00:29:47,419 --> 00:29:49,953
标题字体或副标题字体，请记住我们是什么时候

650
00:29:50,021 --> 00:29:53,556
做Twitter Twitter客户端？

651
00:29:53,625 --> 00:29:57,494
所以这些更改会自动更新。

652
00:29:57,562 --> 00:30:00,163
但是如果我还有其他的图标或者

653
00:30:00,232 --> 00:30:03,266
一些其他真正想要自己尺寸的图像

654
00:30:03,335 --> 00:30:04,400
在周围的文字。

655
00:30:04,469 --> 00:30:06,870
如果文字变得很小或者图标想要的话

656
00:30:06,939 --> 00:30:07,855
如果文字真的很大，图标想要变大。

657
00:30:07,856 --> 00:30:08,772
变小，

658
00:30:08,841 --> 00:30:12,876
所以我可能想知道，所以我通过签名找出

659
00:30:12,945 --> 00:30:16,880
用addObserver收听这个广播电台

660
00:30:16,949 --> 00:30:19,515
在这里我只是说我只是

661
00:30:19,584 --> 00:30:22,685
有兴趣的UI应用程序对象发送它。

662
00:30:22,754 --> 00:30:25,188
我可以把没有那里真的cuz我不​​在乎谁

663
00:30:25,257 --> 00:30:28,591
发送这个我知道这将是应用程序对象，

664
00:30:28,660 --> 00:30:29,993
但我真的不在乎。

665
00:30:30,061 --> 00:30:32,662
我将在主队列上执行这个，因为

666
00:30:32,731 --> 00:30:34,531
我要做UI的东西

667
00:30:34,599 --> 00:30:37,968
当然，这个大小类别的反应也在变化。

668
00:30:38,036 --> 00:30:41,537
然后在我的闭包内，我看看通知和

669
00:30:41,606 --> 00:30:44,941
在字典中，我正在寻找所谓的密钥

670
00:30:45,009 --> 00:30:49,011
UIContentSizeCategoryNewValue-键。

671
00:30:49,080 --> 00:30:50,513
我发现了这一点

672
00:30:50,582 --> 00:30:52,182
通过查看下面的文档

673
00:30:52,251 --> 00:30:55,585
NSNotification.Name.UIContent- SizeCategoryDidChange。

674
00:30:55,654 --> 00:30:58,688
当我看着那个特定的广播电台。

675
00:30:58,757 --> 00:30:59,723
它在文件中说，

676
00:30:59,792 --> 00:31:02,459
嘿，你可以使用UIContentSizeCategoryNewValu-

677
00:31:02,528 --> 00:31:05,896
eKey要离开字典大小类别。

678
00:31:05,964 --> 00:31:08,297
换句话说，该滑块的位置

679
00:31:08,366 --> 00:31:10,767
所以一个例子，这个值可能是什么

680
00:31:10,836 --> 00:31:13,170
是UIContentSizeCategorySmall。

681
00:31:15,073 --> 00:31:16,706
所以现在我发现了，而且

682
00:31:16,775 --> 00:31:18,174
我会在每次发生变化时找出。

683
00:31:18,243 --> 00:31:20,677
我会得到一个广播，它会告诉我。

684
00:31:20,746 --> 00:31:22,212
现在，我没有真正谈论这个，但是

685
00:31:22,281 --> 00:31:25,381
注意addObserver，那个通知，

686
00:31:25,450 --> 00:31:28,618
默认通知中心的方法，它返回的东西。

687
00:31:28,687 --> 00:31:33,223
这个东西观察者，它是NS对象协议的类型。

688
00:31:33,292 --> 00:31:34,958
基本上这是一个cookie。

689
00:31:35,026 --> 00:31:35,859
你不是什么，

690
00:31:35,927 --> 00:31:38,728
你不知道它是什么类型，所有你使用它，

691
00:31:38,797 --> 00:31:41,498
后来当你不再感兴趣的时候

692
00:31:41,567 --> 00:31:44,033
这个，你删除这个观察者。

693
00:31:44,102 --> 00:31:47,370
那就是说，通知中心，

694
00:31:47,438 --> 00:31:49,473
我不想再听到这个广播电台了，所以

695
00:31:49,541 --> 00:31:51,174
不要再发送我的广播。

696
00:31:51,243 --> 00:31:55,312
现在这样做真的很重要。

697
00:31:55,380 --> 00:31:58,482
所以通常我们要做一些面向UI的工作

698
00:31:58,550 --> 00:32:02,518
像这个

699
00:32:02,587 --> 00:32:04,121
然后在视野中会消失，

700
00:32:04,189 --> 00:32:06,456
我们会删除观察者，因为没有任何意义

701
00:32:06,525 --> 00:32:09,192
听这个广播电台，并调整我们的图标大小和

702
00:32:09,261 --> 00:32:11,761
当我们不在屏幕上时的东西

703
00:32:11,829 --> 00:32:15,031
当然，当我们离开屏幕时，这可能会发生。

704
00:32:15,100 --> 00:32:19,902
所以也许在我们看来，出现了，或者看法会出现，

705
00:32:19,971 --> 00:32:22,973
我们可能会根据需要调整我们的图标大小

706
00:32:23,042 --> 00:32:24,307
这个内容大小类别。

707
00:32:24,376 --> 00:32:26,276
你可以从UI应用程序中获得，

708
00:32:26,345 --> 00:32:28,044
你可以问问它是什么，它会告诉你，

709
00:32:28,113 --> 00:32:31,981
你不一定要得到广播电台的通知，

710
00:32:32,050 --> 00:32:33,317
找出它是什么。

711
00:32:34,919 --> 00:32:37,320
这是听广播电台的一个例子。

712
00:32:37,388 --> 00:32:41,024
现在在广播电台播放怎么样呢？

713
00:32:41,093 --> 00:32:42,259
这也是非常简单的。

714
00:32:42,327 --> 00:32:44,193
你得到这个默认的通知中心，和

715
00:32:44,262 --> 00:32:46,663
你会使用该方法的帖子。

716
00:32:46,732 --> 00:32:49,433
邮政以广播电台的名字发贴，

717
00:32:49,501 --> 00:32:52,402
再次，你可以发明自己的，如果你想要的。

718
00:32:52,471 --> 00:32:55,838
对象，那就是发件人，万一人们只能是

719
00:32:55,907 --> 00:32:58,975
有兴趣从某些人广播。

720
00:32:59,044 --> 00:33:01,278
通常，这将是自我，你会放在那里。

721
00:33:02,314 --> 00:33:03,713
然后有用户信息。

722
00:33:03,782 --> 00:33:06,983
那就是你要传给他们的字典。

723
00:33:07,052 --> 00:33:08,919
所以，他们会得到相同的用户信息。

724
00:33:10,923 --> 00:33:14,691
所以，一旦你执行这个职位

725
00:33:14,759 --> 00:33:18,861
所有听众，所有人都做了addObserver，谁

726
00:33:18,930 --> 00:33:21,864
正在听，因为他们的关闭在同一个执行

727
00:33:21,933 --> 00:33:25,202
队列作为您的发布将立即执行。

728
00:33:27,705 --> 00:33:29,072
所有其他的，所以

729
00:33:29,140 --> 00:33:31,040
如果你把这个发布在主队列中

730
00:33:31,109 --> 00:33:34,344
例子，你是观察员都在主队列。

731
00:33:34,412 --> 00:33:36,679
他们的闭包只会放在队列上，

732
00:33:36,748 --> 00:33:38,648
他们将被放在主队列上

733
00:33:38,717 --> 00:33:41,685
他们将执行他们拥有的下一个机会。

734
00:33:44,522 --> 00:33:47,324
就这样，张贴和发布广播

735
00:33:47,392 --> 00:33:50,193
广播电台，就是广播电台就是这样

736
00:33:50,262 --> 00:33:52,395
我所做的一切，没人称之为，

737
00:33:52,464 --> 00:33:54,364
你不会在文档中看到，

738
00:33:54,433 --> 00:33:57,033
这只是一个类比，这里发生了什么。

739
00:33:57,101 --> 00:33:59,136
这是通知。

740
00:33:59,204 --> 00:34:02,739
还有另一种电台模型的事情，

741
00:34:02,808 --> 00:34:06,609
我不是在说，这是键值观察。

742
00:34:06,678 --> 00:34:09,545
你也可以在文档中查找。

743
00:34:09,614 --> 00:34:13,583
这是一种方法，您可以注册，以找出是否var

744
00:34:13,652 --> 00:34:15,819
对其他一些对象的变化。

745
00:34:17,989 --> 00:34:20,590
所以，看看那个，如果你可能有兴趣的话。

746
00:34:22,660 --> 00:34:25,695
这里的下一个主题是应用程序生命周期。

747
00:34:25,764 --> 00:34:27,397
你知道我们如何看待生命周期，

748
00:34:27,465 --> 00:34:29,799
我们也有一个应用程序，你可以找出来

749
00:34:29,868 --> 00:34:31,934
您的应用程序经历其生命周期。

750
00:34:32,003 --> 00:34:35,472
所以首先让我谈谈你的申请的状态

751
00:34:35,540 --> 00:34:36,139
可以在

752
00:34:36,207 --> 00:34:39,743
它可能是真正的五个条件之一。

753
00:34:39,812 --> 00:34:42,411
一个是顶部不运行。

754
00:34:42,480 --> 00:34:43,779
那就是用户从来没有，

755
00:34:43,848 --> 00:34:46,415
没有运行你的应用程序，显然你没有运行。

756
00:34:46,484 --> 00:34:48,885
你的代码，没有代码执行

757
00:34:48,954 --> 00:34:50,620
任何与您的应用程序相关的方式

758
00:34:50,689 --> 00:34:52,355
没有人碰到你的图标或任何东西。

759
00:34:54,025 --> 00:34:56,893
那么有两个前台状态

760
00:34:56,962 --> 00:34:59,095
您的应用程序开始运行后。

761
00:34:59,163 --> 00:35:01,397
一个被称为非活动状态。

762
00:35:01,466 --> 00:35:03,867
在非活动状态下，您不会得到任何事件。

763
00:35:03,935 --> 00:35:05,568
您无法绘制任何UI。

764
00:35:05,637 --> 00:35:09,305
你只是喜欢准备，真正运行。

765
00:35:09,374 --> 00:35:10,273
你不活跃

766
00:35:10,342 --> 00:35:12,041
您没有在屏幕上显示。

767
00:35:12,110 --> 00:35:14,244
用户不与您交互。

768
00:35:14,313 --> 00:35:17,113
另一个另外一个前台状态是活动的，

769
00:35:17,182 --> 00:35:19,515
现在这是你正在得到的正常状态

770
00:35:19,584 --> 00:35:22,119
触摸事件，您正在屏幕上画，您正在互动

771
00:35:22,187 --> 00:35:25,188
用户将您视为活动应用程序。

772
00:35:26,859 --> 00:35:29,059
那么还有背景状态。

773
00:35:29,127 --> 00:35:32,728
现在的背景状态比运行更少

774
00:35:32,797 --> 00:35:37,533
前台无效状态，在您的背景状态

775
00:35:37,602 --> 00:35:41,705
显然不是在屏幕上，不仅你不在屏幕上，

776
00:35:41,773 --> 00:35:46,008
互动你几乎没有运行在后台和

777
00:35:46,077 --> 00:35:48,445
你的一生有限。

778
00:35:48,513 --> 00:35:51,548
你可能不会运行超过30秒。

779
00:35:51,616 --> 00:35:54,417
这是一个暂时的状态

780
00:35:54,486 --> 00:35:55,585
在前台和

781
00:35:55,654 --> 00:35:57,419
去下一个状态我要谈谈，

782
00:35:57,488 --> 00:35:58,989
这将被暂停。

783
00:36:00,225 --> 00:36:01,624
所以，如果你被暂停，

784
00:36:01,693 --> 00:36:04,561
您的应用程序中没有代码正在运行。

785
00:36:04,630 --> 00:36:06,629
你还在记忆中，但是

786
00:36:06,698 --> 00:36:08,264
你只是坐在那里不跑。

787
00:36:08,333 --> 00:36:09,499
你没有循环。

788
00:36:11,069 --> 00:36:15,137
现在，你必须要有一件事情，你必须明白

789
00:36:15,206 --> 00:36:18,074
关于这个生命周期如何工作是你过渡

790
00:36:18,143 --> 00:36:20,911
通过这些状态有序的方式。

791
00:36:20,979 --> 00:36:23,480
所以当你启动，你从不运行，

792
00:36:23,548 --> 00:36:25,849
到这个前台的非活动状态，到活动。

793
00:36:25,917 --> 00:36:29,819
您始终转换为非活动状态以进入活动状态。

794
00:36:29,888 --> 00:36:32,922
当某些其他应用程序切换到，有人启动

795
00:36:32,991 --> 00:36:35,858
另一个应用程序，你是你是活跃的应用程序，你走了

796
00:36:35,927 --> 00:36:39,428
从前面的活动回到无效，

797
00:36:39,497 --> 00:36:44,300
然后围绕着背景长达30秒或

798
00:36:44,369 --> 00:36:47,603
所以，然后你被暂停，你根本不运行。

799
00:36:47,672 --> 00:36:50,373
所以你总是通过这个流程过渡

800
00:36:50,441 --> 00:36:53,276
从你的活跃的应用程序到别人的

801
00:36:53,345 --> 00:36:55,144
另一个deactive应用程序

802
00:36:55,213 --> 00:36:59,149
现在当你处于暂停状态

803
00:36:59,217 --> 00:37:01,718
你因为任何原因而死亡

804
00:37:01,786 --> 00:37:05,287
你直接杀死，没有你的代码从中跑出来

805
00:37:05,356 --> 00:37:08,224
你被暂停的时候，被杀掉进程的时候。

806
00:37:08,292 --> 00:37:09,526
为什么要杀掉进程？

807
00:37:09,594 --> 00:37:12,395
那么，也许用户明确地杀掉了你。

808
00:37:12,463 --> 00:37:14,097
也许你开始使用太多的内存了

809
00:37:14,165 --> 00:37:15,064
系统杀掉了你

810
00:37:15,133 --> 00:37:18,401
也许手机的电池没了，它重新启动，为

811
00:37:18,469 --> 00:37:19,735
一些原因，无论如何。

812
00:37:19,804 --> 00:37:21,604
所以当你处于暂停状态时，

813
00:37:21,673 --> 00:37:23,773
你必须准备好被杀掉。

814
00:37:23,841 --> 00:37:26,275
所以你不想有任何未保存的数据，或者

815
00:37:26,344 --> 00:37:27,744
在那个状态下的任何事情，

816
00:37:27,813 --> 00:37:29,779
这就是为什么你得到背景状态，

817
00:37:29,848 --> 00:37:30,947
为此准备好了。

818
00:37:32,250 --> 00:37:35,017
现在，在这些箭头的每一个，这些橙色的箭头，

819
00:37:35,086 --> 00:37:39,622
您会收到一条消息发送到您的应用程序委托。

820
00:37:39,691 --> 00:37:41,190
到目前为止，我们只使用了这个应用程序

821
00:37:41,259 --> 00:37:44,627
代理我们的小核心数据在那里。

822
00:37:44,696 --> 00:37:45,895
但是那里有一堆方法。

823
00:37:45,964 --> 00:37:48,064
你每次看到你已经看过他们，你已经有了委托。

824
00:37:48,133 --> 00:37:50,233
我们会谈论他们做什么和

825
00:37:50,302 --> 00:37:51,534
当他们被称为。

826
00:37:51,603 --> 00:37:54,737
所以你的应用程序委托中的第一个被称为应用程序

827
00:37:54,806 --> 00:37:56,773
didFinishLaunchingWithOptions。

828
00:37:56,842 --> 00:37:57,407
还有

829
00:37:57,475 --> 00:37:59,241
一个willFinishLaunchingWithOpti。

830
00:37:59,310 --> 00:38:01,510
它给你这个字典。

831
00:38:01,579 --> 00:38:02,144
而字典，

832
00:38:02,213 --> 00:38:04,647
键是UIApplicationLaunchOptionsKey，

833
00:38:04,715 --> 00:38:07,216
您可以查看该符号的文档。

834
00:38:07,285 --> 00:38:09,318
你会发现所有可以出现的各种东西

835
00:38:09,387 --> 00:38:10,486
在这个字典中。

836
00:38:10,555 --> 00:38:13,456
值取决于关键是什么。

837
00:38:13,525 --> 00:38:15,491
顺便说一下，所有这些应用程序委托方法，

838
00:38:15,560 --> 00:38:19,195
你也可以通过听这个广播电台。

839
00:38:19,264 --> 00:38:20,396
所以广播电台

840
00:38:20,465 --> 00:38:22,965
这一个是UIApplicationDidFinishLauching

841
00:38:23,034 --> 00:38:25,969
广播电台，它的通知.name.that如果你

842
00:38:26,037 --> 00:38:28,704
听你会得到的，你添加观察者，

843
00:38:28,773 --> 00:38:31,474
当应用启动结束，你会得到更近的调用

844
00:38:31,543 --> 00:38:34,277
发生启动，所以你不必把它放在你的，

845
00:38:34,346 --> 00:38:38,014
应用程序委托你可以把它放在其他地方的其他代码。

846
00:38:38,083 --> 00:38:41,384
在这个DidFinishLaunchWithOptions中发生了什么

847
00:38:41,452 --> 00:38:44,086
为什么它被称为这样的东西，

848
00:38:44,155 --> 00:38:46,489
你为什么有这个字典？

849
00:38:46,557 --> 00:38:49,559
嗯，很明显，当你通常发射，这得到

850
00:38:49,627 --> 00:38:52,361
这个字典没有任何东西。

851
00:38:52,430 --> 00:38:53,697
因为你刚刚正常发射，

852
00:38:53,765 --> 00:38:55,764
用户点击你的图标并启动。

853
00:38:55,833 --> 00:38:57,200
但是还有很多其他的方法

854
00:38:57,269 --> 00:38:59,435
你要开始购买系统。

855
00:38:59,504 --> 00:39:01,304
当这些其他方式发生时，

856
00:39:01,372 --> 00:39:03,405
那么你会有这个字典告诉你为什么，

857
00:39:03,474 --> 00:39:05,407
并给你所需的信息。

858
00:39:05,476 --> 00:39:07,110
所以有一件事，例如，

859
00:39:07,178 --> 00:39:10,112
是如果您的应用程序打开某种文档，

860
00:39:10,181 --> 00:39:12,682
假设你是一个PDF查看器，你知道如何打开PDF

861
00:39:12,750 --> 00:39:15,551
文件，并且您已经注册到系统。

862
00:39:15,620 --> 00:39:18,287
那么如果有人在其他应用程序中说，打开这个PDF，

863
00:39:18,356 --> 00:39:21,157
系统会启动你。

864
00:39:21,225 --> 00:39:23,826
当它启动你，在字典那里

865
00:39:23,894 --> 00:39:26,729
将会是一些关键的URL。

866
00:39:26,798 --> 00:39:28,464
这是告诉你打开它。

867
00:39:28,533 --> 00:39:32,068
这就是一个例子，另一个是，

868
00:39:32,136 --> 00:39:34,403
你已经设置好了，可以设置核心位置。

869
00:39:34,472 --> 00:39:37,706
本季度我没有谈到核心位置，

870
00:39:37,775 --> 00:39:41,443
但是您可以设置核心位置机制，

871
00:39:41,512 --> 00:39:44,614
如果你去世界上的某个地方，干洗店，

872
00:39:44,683 --> 00:39:46,382
只是规范的例子，

873
00:39:46,451 --> 00:39:50,052
当您通过干洗机行走时，您的应用程序将会启动。

874
00:39:50,121 --> 00:39:52,422
所以你可以设置它，如果再次发生，

875
00:39:52,490 --> 00:39:55,258
这个字典会说，嘿，我推荐你，因为你

876
00:39:55,326 --> 00:39:57,460
去了你的一个注册地点

877
00:39:57,529 --> 00:39:59,462
这里是你工作的时候

878
00:39:59,530 --> 00:40:02,998
您也可以继续进行活动。

879
00:40:03,067 --> 00:40:04,700
我不知道你们是否知道这个功能，

880
00:40:04,769 --> 00:40:05,735
这是一个很好的功能。

881
00:40:05,804 --> 00:40:08,371
你开始在手机上浏览东西，

882
00:40:08,439 --> 00:40:09,672
然后你切换到你的iPad。

883
00:40:09,741 --> 00:40:12,241
您可以继续浏览您所在的地方。

884
00:40:12,310 --> 00:40:14,410
所以你可能会启动这样做，

885
00:40:14,479 --> 00:40:16,712
继续做你正在做的事情

886
00:40:16,781 --> 00:40:18,881
如果您收到推送通知，

887
00:40:18,950 --> 00:40:22,885
我们没有真正谈论通知，除了

888
00:40:22,954 --> 00:40:25,421
在云套件部分，我希望你，

889
00:40:25,489 --> 00:40:28,725
你有多少人看到了云端套件星期五？

890
00:40:28,793 --> 00:40:32,194
这只是你们中的几个，值得回去看看

891
00:40:32,263 --> 00:40:34,898
只是看到通知和推送通知。

892
00:40:34,966 --> 00:40:38,134
但是如果你收到一个推送通知给你和

893
00:40:38,203 --> 00:40:39,602
你的应用程序没有运行，

894
00:40:39,671 --> 00:40:42,905
它可能会被启动来处理这个事情。

895
00:40:42,974 --> 00:40:45,908
或者如果您有连接的蓝牙设备，

896
00:40:45,977 --> 00:40:48,110
它，它在范围内，它被启动。

897
00:40:48,179 --> 00:40:49,111
所以有很多原因

898
00:40:49,180 --> 00:40:50,179
应用程序可能会启动。

899
00:40:50,248 --> 00:40:51,113
而当它这样做的时候，

900
00:40:51,182 --> 00:40:54,083
那个字典将会有这些信息

901
00:40:54,151 --> 00:40:57,453
与该特定发射相关。

902
00:40:57,522 --> 00:40:59,722
现在我会在你做的时候提醒你一些事情

903
00:40:59,791 --> 00:41:01,757
你最后一个项目，你会去搜索

904
00:41:01,826 --> 00:41:03,826
互联网一直在寻找办法去做事情。

905
00:41:03,895 --> 00:41:06,328
你可能会碰到真正的老帖子，你呢

906
00:41:06,397 --> 00:41:09,298
通常可以告诉他们，因为他们在Objective C与Swift。

907
00:41:09,367 --> 00:41:11,934
但如果你看到一个帖子在哪里

908
00:41:12,003 --> 00:41:15,704
他们的应用程序中的某人完成了启动

909
00:41:15,773 --> 00:41:19,408
选项就是说UI拆分视图控制器init，

910
00:41:19,477 --> 00:41:21,344
或导航初始化。

911
00:41:21,412 --> 00:41:24,247
他们正在建立他们的用户界面，

912
00:41:24,316 --> 00:41:26,516
那就是故事板代码，

913
00:41:26,585 --> 00:41:30,086
我们现在在故事板上做这些事情。

914
00:41:30,154 --> 00:41:33,756
我们在应用程序中构建任何UI的时间已经完成

915
00:41:33,825 --> 00:41:36,492
发射，0.001％的时间。

916
00:41:36,561 --> 00:41:41,263
所以我只想确保你不会被这个混淆。

917
00:41:41,332 --> 00:41:44,767
所以这个小代理方法是用那个箭头发送的

918
00:41:44,836 --> 00:41:45,601
在那里。

919
00:41:45,670 --> 00:41:46,836
你看到那里的箭头？

920
00:41:46,904 --> 00:41:49,605
那就是你从不运行的箭头

921
00:41:49,674 --> 00:41:51,307
变得不活跃

922
00:41:52,577 --> 00:41:54,043
所以你运行，你可以做的东西，但是

923
00:41:54,111 --> 00:41:54,677
你不在屏幕上

924
00:41:54,746 --> 00:41:56,946
所以在ApplicationDidFinishLaunching

925
00:41:57,015 --> 00:41:59,348
使用选项，您可以构建您的UI，但是

926
00:41:59,417 --> 00:42:00,883
你不能把它放在屏幕上。

927
00:42:00,951 --> 00:42:02,017
我的意思是，它不会出现在屏幕上

928
00:42:02,086 --> 00:42:03,119
你还没活动

929
00:42:05,423 --> 00:42:08,123
现在我想简单谈谈一下相反的

930
00:42:08,192 --> 00:42:11,027
箭头可以进入非活动状态。

931
00:42:11,095 --> 00:42:12,962
您可以从运行中进入无效，但是

932
00:42:13,031 --> 00:42:15,498
您也可以在运行时停用。

933
00:42:19,737 --> 00:42:23,038
事情发生，就像你切换到另一个应用程序，另一个

934
00:42:23,107 --> 00:42:25,874
事情可能会发生，导致你回到非活动状态

935
00:42:25,943 --> 00:42:28,644
状态，你不再可以做UI。

936
00:42:28,713 --> 00:42:33,416
这种过渡，即WillResignActive过渡，

937
00:42:33,485 --> 00:42:36,685
你想把它当作暂停按钮。

938
00:42:36,754 --> 00:42:39,521
这是你的应用程序想要暂停的地方。

939
00:42:39,590 --> 00:42:41,624
所以如果我们在做一个小行星应用程序，

940
00:42:41,693 --> 00:42:44,760
我想要停止我所有的小行星，

941
00:42:44,829 --> 00:42:46,696
记住他们的速度是多少。

942
00:42:47,966 --> 00:42:50,299
并处于暂停状态。

943
00:42:50,368 --> 00:42:51,833
然后我会告诉你我要去什么

944
00:42:51,902 --> 00:42:53,335
在这里暂停一秒。

945
00:42:53,404 --> 00:42:54,203
然后把它全部回来。

946
00:42:54,271 --> 00:42:56,605
所以这是暂停，我喜欢把这个想像为暂停，

947
00:42:56,674 --> 00:42:59,108
你将成为你的UI的活跃应用程序

948
00:42:59,177 --> 00:43:00,609
工作到这个非活动状态。

949
00:43:00,678 --> 00:43:01,910
你还在前台。

950
00:43:01,979 --> 00:43:03,813
现在是什么原因导致这种情况呢

951
00:43:03,881 --> 00:43:06,615
打来电话时，打电话时，

952
00:43:06,684 --> 00:43:08,784
你的应用程序是在后台。

953
00:43:08,853 --> 00:43:10,018
是的，你不能做任何UI，

954
00:43:10,087 --> 00:43:12,922
因为这个人在电话里说话，所以不会发生任何事情。

955
00:43:12,991 --> 00:43:14,356
但是一旦他们的电话结束，

956
00:43:14,425 --> 00:43:15,925
你回到活跃的状态，

957
00:43:15,994 --> 00:43:17,360
你从来没有进入背景。

958
00:43:17,428 --> 00:43:18,828
你只是前台不活动。

959
00:43:21,599 --> 00:43:23,232
或者你会通过这个箭头

960
00:43:23,301 --> 00:43:24,867
在你到背景的路上

961
00:43:24,936 --> 00:43:27,270
有人点击另一个应用程序，所以

962
00:43:27,338 --> 00:43:30,606
你正在过渡到这里，还想暂停。

963
00:43:30,675 --> 00:43:33,142
然后你会去背景，要清理

964
00:43:33,211 --> 00:43:35,544
一些更多的可能会在以后被终止。

965
00:43:35,613 --> 00:43:38,581
但在这里，你还是，我经常会暂停

966
00:43:38,650 --> 00:43:42,785
通过这里，所以这是辞职状态。

967
00:43:42,854 --> 00:43:44,754
另外这个箭头向另一个方向走去，

968
00:43:44,823 --> 00:43:48,390
这是您的应用程序真正启动时。

969
00:43:48,459 --> 00:43:50,793
所以这是你的UI可用时。

970
00:43:50,862 --> 00:43:53,796
这里是您要取消暂停的地方。

971
00:43:53,864 --> 00:43:57,166
如果你已经暂停，那么这里是你取消暂停的地方，

972
00:43:57,235 --> 00:43:59,802
在这个DidBecomeActive。

973
00:43:59,870 --> 00:44:02,505
因为你会在你回来的路上经过这个

974
00:44:02,573 --> 00:44:05,241
从背景或电话结束时，

975
00:44:05,310 --> 00:44:06,742
那么你会活跃。

976
00:44:06,811 --> 00:44:08,678
所以这是非暂停的。

977
00:44:10,014 --> 00:44:12,848
现在，如果你暂停了，那么你只会明显地缓解。

978
00:44:12,917 --> 00:44:15,084
你从来没有停止过，那里没有这个停止。

979
00:44:16,787 --> 00:44:18,186
这个小箭头落在角落里，

980
00:44:18,255 --> 00:44:21,290
这是DidEnterBackground状态，

981
00:44:21,359 --> 00:44:23,759
这是你想要压下舱口的地方。

982
00:44:23,828 --> 00:44:26,662
你想保存任何未保存的信息，

983
00:44:26,731 --> 00:44:28,564
你已经暂停了，

984
00:44:28,632 --> 00:44:32,235
因为你上了活动，不能到达那里

985
00:44:32,303 --> 00:44:35,438
从活跃的，除非你经历了不活跃的暂停。

986
00:44:35,507 --> 00:44:37,440
看看箭头如何去那里，所以

987
00:44:37,508 --> 00:44:39,541
这里是你想要保存的东西。

988
00:44:39,610 --> 00:44:42,278
你想让自己处于这个状态，你约有30岁

989
00:44:42,347 --> 00:44:44,480
几秒钟就能做到这一点，你可能会被杀死

990
00:44:44,549 --> 00:44:46,782
通常会丢失任何数据或任何东西。

991
00:44:46,850 --> 00:44:49,351
这也是一个好地方

992
00:44:49,420 --> 00:44:51,754
保存你的状态一点，所以如果你被杀死了

993
00:44:51,823 --> 00:44:52,788
你再运行了，

994
00:44:52,857 --> 00:44:55,291
你可以准确地启动你所在的地方。

995
00:44:55,360 --> 00:44:57,493
实际上有一些基础设施

996
00:44:57,562 --> 00:44:59,728
UI应用程序，我会在一秒钟内提到，

997
00:44:59,797 --> 00:45:00,762
要做到这一点。

998
00:45:00,831 --> 00:45:04,567
所以这是在这里的舱口区域，

999
00:45:04,635 --> 00:45:06,135
过渡。

1000
00:45:06,203 --> 00:45:09,538
当你离开背景，所以

1001
00:45:09,607 --> 00:45:11,407
你在后台或

1002
00:45:11,475 --> 00:45:15,844
暂停，当你回来，你会得到这个

1003
00:45:15,913 --> 00:45:19,115
ApplicationWillEnterForegro- und。

1004
00:45:19,183 --> 00:45:22,718
所以，这就是说，你会，备份，

1005
00:45:22,787 --> 00:45:25,788
如果你有这样的话，你可以在那里打开舱口

1006
00:45:25,856 --> 00:45:28,290
想要打开一些你已经关闭的文件

1007
00:45:28,359 --> 00:45:30,859
像这样，你可以在这里做。

1008
00:45:30,928 --> 00:45:32,227
你有这个吗

1009
00:45:32,296 --> 00:45:35,364
所以这些是你一生中过渡的

1010
00:45:35,433 --> 00:45:36,732
的应用程序。

1011
00:45:36,801 --> 00:45:39,802
ApplicationDelegate涉及很多其他

1012
00:45:39,871 --> 00:45:41,970
除了生命周期之外，事情也是如此。

1013
00:45:42,039 --> 00:45:44,506
例如，状态恢复，这是事情

1014
00:45:44,575 --> 00:45:47,242
我刚才在告诉你，在哪里可以

1015
00:45:47,311 --> 00:45:49,578
保存你的状态，所以当你再次启动，你进来了

1016
00:45:49,647 --> 00:45:52,114
在同一视图控制器上完全相同的状态。

1017
00:45:52,183 --> 00:45:55,785
也许你的第一反应者也是一样的闪烁

1018
00:45:55,853 --> 00:45:57,319
光标和相同的文本字段或任何，

1019
00:45:57,388 --> 00:45:59,054
你可以保存所有这一切，有一个完整的机制

1020
00:45:59,123 --> 00:45:59,688
这样做

1021
00:45:59,757 --> 00:46:01,323
你可以看看它，如果你想，

1022
00:46:01,392 --> 00:46:04,326
可能是一个很好的事情，从中得到一个标点。

1023
00:46:04,395 --> 00:46:08,030
还有数据保护，所以你手机上的数据

1024
00:46:08,098 --> 00:46:12,535
当您处于锁定状态时，默认情况下受到保护。

1025
00:46:12,603 --> 00:46:14,303
您的手机已锁定。

1026
00:46:14,372 --> 00:46:16,972
那么所有的手机，它上面的数据是加密的，所以

1027
00:46:17,041 --> 00:46:19,642
即使有人以某种方式闯入手机

1028
00:46:19,710 --> 00:46:21,610
将数据从静态RAM中取出。

1029
00:46:21,679 --> 00:46:24,113
所有这些都将被加密，所以无论如何，这将是无用的。

1030
00:46:24,182 --> 00:46:25,848
所以AppDelegate可以告诉你什么时候

1031
00:46:25,917 --> 00:46:28,317
数据变得不加密，可供使用。

1032
00:46:28,385 --> 00:46:31,387
换句话说，解锁，屏幕已被解锁，或

1033
00:46:31,455 --> 00:46:33,156
当它回到被锁定。

1034
00:46:34,925 --> 00:46:37,759
您可以在其他应用中打开网址。

1035
00:46:37,828 --> 00:46:40,362
有一种方法，我想你想要额外的信用项目。

1036
00:46:40,431 --> 00:46:41,430
或者也许我们甚至把它做成了

1037
00:46:41,499 --> 00:46:43,298
一个所需任务的一部分。

1038
00:46:43,367 --> 00:46:44,767
所以你可能知道如何做到这一点。

1039
00:46:45,836 --> 00:46:46,635
这是另一回事。

1040
00:46:46,704 --> 00:46:52,141
这是有人要求您在AppDelegate中打开一个URL。

1041
00:46:52,210 --> 00:46:53,708
所以这是：你会得到这个消息，

1042
00:46:53,777 --> 00:46:56,245
你的AppDelegate说，嘿，这个，其他一些应用程序想要你

1043
00:46:56,314 --> 00:46:58,413
打开这个URL，你可以去做。

1044
00:46:58,482 --> 00:46:59,782
类似于如果你启动，

1045
00:46:59,850 --> 00:47:01,283
如果你没有启动它，

1046
00:47:01,351 --> 00:47:02,751
因为如果你推出它，

1047
00:47:02,820 --> 00:47:04,987
它会在该字典中，但否则，

1048
00:47:05,056 --> 00:47:06,755
你会得到这个方法。

1049
00:47:06,824 --> 00:47:08,523
而且还有一个完整的机制

1050
00:47:08,592 --> 00:47:09,992
背景取景

1051
00:47:10,061 --> 00:47:12,661
有时你可能会有一个应用程序，这是一个社交媒体应用程序。

1052
00:47:12,730 --> 00:47:14,996
而且你想获得最新的信息

1053
00:47:15,065 --> 00:47:18,300
用户在任何时候，所以如果他们启动，他们看到

1054
00:47:18,369 --> 00:47:21,637
你的Facebook页面上的最新帖子，或者什么。

1055
00:47:21,705 --> 00:47:24,373
为了做到这一点，你可以设置这个后台提取。

1056
00:47:24,442 --> 00:47:26,742
现在，后台抓取并不是每分钟发生一次

1057
00:47:26,810 --> 00:47:27,542
或任何类似的东西。

1058
00:47:27,611 --> 00:47:28,944
发生了，你知道，

1059
00:47:29,013 --> 00:47:30,612
偶尔在后台和

1060
00:47:30,681 --> 00:47:32,981
如果你尝试做太多，系统，

1061
00:47:33,050 --> 00:47:35,985
会让你心烦，停止做，安排好你。

1062
00:47:36,053 --> 00:47:39,254
但是，在背景提取中发生的是，你

1063
00:47:39,323 --> 00:47:42,658
从暂停状态转移到后台状态

1064
00:47:42,727 --> 00:47:44,559
通常30秒以内。

1065
00:47:44,628 --> 00:47:46,695
你去，你可以在网络上获取或

1066
00:47:46,764 --> 00:47:48,130
获取您的最新信息，和

1067
00:47:48,199 --> 00:47:50,166
那么你回去暂停。

1068
00:47:50,234 --> 00:47:52,034
所以这样，如果你去悬浮背景，

1069
00:47:52,103 --> 00:47:54,804
前台活动很快，你得到的数据。

1070
00:47:57,541 --> 00:48:00,542
还有一些其他的东西，但这主要是什么

1071
00:48:00,611 --> 00:48:03,179
ApplicationDelegate是关于。

1072
00:48:03,247 --> 00:48:06,415
现在应用程序委托当然必须是代理

1073
00:48:06,483 --> 00:48:07,349
的一些对象。

1074
00:48:07,418 --> 00:48:09,985
它是UI应用程序的代理。

1075
00:48:10,054 --> 00:48:12,788
所以UI应用程序是一个类，只有一个实例

1076
00:48:12,857 --> 00:48:14,557
你在你的应用程序中有

1077
00:48:14,625 --> 00:48:17,526
你可以通过说UIApplication.shared和

1078
00:48:17,594 --> 00:48:20,296
它管理所有的全局行为。

1079
00:48:20,364 --> 00:48:22,898
这听起来像，哇这是真正重要的对象。

1080
00:48:22,967 --> 00:48:24,233
但实际上并不重要。

1081
00:48:24,301 --> 00:48:27,369
你几乎从来没有与UIApplication交互，因为它

1082
00:48:27,438 --> 00:48:31,240
将所有有趣的事情委托给其应用程序代理。

1083
00:48:31,309 --> 00:48:33,442
但是你可以做几件事情

1084
00:48:33,511 --> 00:48:34,543
UIApplication的。

1085
00:48:34,612 --> 00:48:39,281
例如，这里您可以在其他应用程序中打开URL

1086
00:48:39,350 --> 00:48:42,384
您可以在这里注册接收推送通知。

1087
00:48:42,453 --> 00:48:44,954
推送您的应用不会得到的通知

1088
00:48:45,022 --> 00:48:48,090
除非你叫这个registerForRemoteNotifications

1089
00:48:48,159 --> 00:48:49,157
在UIApplication。

1090
00:48:49,226 --> 00:48:51,994
顺便说一句，通知，推送通知和

1091
00:48:52,063 --> 00:48:56,398
本地通知已经在iOS 10中统一到了这个UN

1092
00:48:56,467 --> 00:48:58,433
通知框架。

1093
00:48:58,502 --> 00:49:01,103
本地通知，您可能知道的推送通知

1094
00:49:01,171 --> 00:49:03,238
这是当某些服务器发送给你的时候

1095
00:49:03,307 --> 00:49:05,707
一些信息，如在云套件中的情况

1096
00:49:05,776 --> 00:49:08,443
告诉你你的数据库里有些数据已经改变了。

1097
00:49:08,512 --> 00:49:11,313
但本地通知也很酷。

1098
00:49:11,381 --> 00:49:13,783
您可以设置将触发的本地通知

1099
00:49:13,851 --> 00:49:14,583
一定时间

1100
00:49:14,652 --> 00:49:18,253
这是一个日历应用程序提醒你的时间

1101
00:49:18,322 --> 00:49:22,090
一个特定的约会，或者它正在使用本地

1102
00:49:22,159 --> 00:49:26,195
通知，并安排一段时间。

1103
00:49:26,263 --> 00:49:29,531
我想你也可以做地方的本地通知

1104
00:49:29,600 --> 00:49:33,435
变化，你靠近干洗机或什么。

1105
00:49:33,504 --> 00:49:35,704
所以本地通知，

1106
00:49:35,773 --> 00:49:37,973
将推送通知统一在iOS 10和

1107
00:49:38,041 --> 00:49:40,910
它不是UIApplication的一部分，这是另一个框架。

1108
00:49:42,713 --> 00:49:44,613
不幸的是我没有时间去过去。

1109
00:49:44,682 --> 00:49:47,215
顺便说一句，本地通知是不同的

1110
00:49:47,284 --> 00:49:49,985
来自NSNotification，或只是通知。

1111
00:49:50,054 --> 00:49:52,320
通知是广播电台的事情，

1112
00:49:52,389 --> 00:49:55,457
本地通知和推送通知是这样的

1113
00:49:55,525 --> 00:49:58,460
实际上通知用户的其他机制

1114
00:49:58,529 --> 00:50:01,430
完全不同，彼此无关。

1115
00:50:03,334 --> 00:50:06,702
在应用程序中，您还可以设置获取间隔

1116
00:50:06,771 --> 00:50:09,638
那个后台拍摄我谈到的东西。

1117
00:50:09,706 --> 00:50:12,274
如果你进入后台和

1118
00:50:12,343 --> 00:50:16,611
你需要更多的时间，因为30秒是不够的。

1119
00:50:16,680 --> 00:50:19,949
有些东西是阻塞的，或者你需要得到一些东西

1120
00:50:20,018 --> 00:50:21,616
网络，你想要更多的时间。

1121
00:50:21,685 --> 00:50:24,753
您可以通过询问UI应用程序来询问更多时间

1122
00:50:24,821 --> 00:50:27,456
对象开始一个后台任务。

1123
00:50:27,524 --> 00:50:29,258
现在，再一次，你不能滥用这个。

1124
00:50:29,327 --> 00:50:31,293
如果你不断要求越来越多的时间，而且

1125
00:50:31,362 --> 00:50:32,628
你试图运行十分钟，

1126
00:50:32,696 --> 00:50:35,898
最终系统会说，这就够了。

1127
00:50:35,966 --> 00:50:38,533
这是为了，只是特殊情况下，

1128
00:50:38,602 --> 00:50:40,468
“呃，我需要另外一分钟”。

1129
00:50:40,537 --> 00:50:42,238
我可以再多一点吗？

1130
00:50:42,306 --> 00:50:44,807
只要你不滥用它，它会给你。

1131
00:50:46,510 --> 00:50:49,678
你的左上角的小旋转器

1132
00:50:49,747 --> 00:50:51,647
设备，好吧，旋转。

1133
00:50:51,715 --> 00:50:53,314
你有没有看到这个事情在你做的时候旋转

1134
00:50:53,383 --> 00:50:54,550
网络上的东西？

1135
00:50:54,618 --> 00:50:56,418
你可以控制，你可以打开它

1136
00:50:56,487 --> 00:50:59,921
与UIApplication中的这个bool关闭。

1137
00:50:59,990 --> 00:51:02,324
你也可以找出很多信息，如记住那样

1138
00:51:02,392 --> 00:51:05,928
类别分类器，小滑块文字大小滑块。

1139
00:51:05,996 --> 00:51:07,963
您可以找到首选内容的幻灯片

1140
00:51:08,031 --> 00:51:09,931
目前是。

1141
00:51:10,000 --> 00:51:12,067
你可以找出剩下多少时间

1142
00:51:12,136 --> 00:51:14,803
在你的后台，坐在后台中。

1143
00:51:14,872 --> 00:51:16,372
你也可以找到你所处的状态

1144
00:51:16,440 --> 00:51:19,341
前台不活动，前台活动后台。

1145
00:51:19,409 --> 00:51:21,210
你可以找出你所在的状态。

1146
00:51:21,278 --> 00:51:22,878
所以你是一个应用程序的一个清理

1147
00:51:22,947 --> 00:51:24,313
为这种全局信息的房子。

1148
00:51:26,083 --> 00:51:27,516
所以这就是UIApplication。

1149
00:51:27,585 --> 00:51:31,654
Info.plist，我们已经看过Info.plist了。

1150
00:51:31,722 --> 00:51:36,291
Info.plist真的就像一个存储的原始数据文件

1151
00:51:36,360 --> 00:51:39,228
很多应用程序的设置。

1152
00:51:39,297 --> 00:51:43,032
我们看到了我们拥有HTTP URL的地址

1153
00:51:43,101 --> 00:51:45,267
我们希望它允许那些不安全的，

1154
00:51:45,336 --> 00:51:47,769
记住应用程序运输安全。

1155
00:51:47,838 --> 00:51:51,807
我们实际上去编辑了我们的Info.plist。

1156
00:51:51,876 --> 00:51:54,609
当您点击它时，您可以看到它看起来像这样。

1157
00:51:54,678 --> 00:51:56,778
这是一个属性列表编辑器在这里。

1158
00:51:56,847 --> 00:51:59,147
所以在左手边你会有弦和

1159
00:51:59,216 --> 00:52:01,383
字典和数组。

1160
00:52:01,452 --> 00:52:03,052
属性列表允许拥有的内容。

1161
00:52:03,120 --> 00:52:04,152
在右边你会有

1162
00:52:04,221 --> 00:52:05,554
那里的值。

1163
00:52:05,622 --> 00:52:08,257
这真的是支持一个XML文件，

1164
00:52:08,325 --> 00:52:10,358
此属性列表存储一个XML文件。

1165
00:52:10,427 --> 00:52:12,928
您实际上可以右键单击它

1166
00:52:12,997 --> 00:52:14,763
将其编辑为XML文件。

1167
00:52:14,832 --> 00:52:17,465
我强烈建议不要这样做，因为

1168
00:52:17,534 --> 00:52:19,134
你可以很容易地打破这个。

1169
00:52:19,203 --> 00:52:22,104
那么现在应用程序将无法读取这个info.plist

1170
00:52:22,172 --> 00:52:25,440
所以我建议不要这样做。

1171
00:52:25,509 --> 00:52:27,276
但通常所有这些设置，

1172
00:52:27,344 --> 00:52:30,913
您可以在项目设置中编辑它们，对。

1173
00:52:30,981 --> 00:52:33,015
你不会去Info.plist。

1174
00:52:33,083 --> 00:52:34,583
但它并不是一个或者

1175
00:52:34,652 --> 00:52:37,485
至少我从来没有找到一个应用程序运输

1176
00:52:37,554 --> 00:52:40,555
安全，但也许他们想要它有意晦涩

1177
00:52:40,624 --> 00:52:43,792
因为他们希望你的应用程序以这种方式安全。

1178
00:52:43,861 --> 00:52:45,995
但是你在这里看到很多很多设置，

1179
00:52:46,063 --> 00:52:48,497
像我们允许肖像颠倒，和

1180
00:52:48,566 --> 00:52:52,935
这些都是存储在Info.plist中的。

1181
00:52:53,004 --> 00:52:56,805
所以你看到的这个设置UI是非常多的

1182
00:52:56,874 --> 00:52:59,308
Info.plist的编辑也是

1183
00:52:59,377 --> 00:53:01,143
很多你在那里看到的东西。

1184
00:53:03,180 --> 00:53:05,681
另一件你会在你的设置中看到的

1185
00:53:05,750 --> 00:53:07,616
是能力。

1186
00:53:07,685 --> 00:53:09,785
他们是一些功能，

1187
00:53:09,854 --> 00:53:14,489
几十个也许，这需要一个外部服务器。

1188
00:53:14,558 --> 00:53:17,025
一些外部资源，如iCloud或

1189
00:53:17,094 --> 00:53:20,061
像CloudKit，需要一些存储所有这些的服务器

1190
00:53:20,130 --> 00:53:21,930
数据在那里或游戏中心。

1191
00:53:21,999 --> 00:53:25,200
有所有的服务器，所以人们可以聚在一起

1192
00:53:25,269 --> 00:53:27,068
玩游戏和类似的东西。

1193
00:53:27,137 --> 00:53:31,073
当你有这样的事情，你本质上

1194
00:53:31,142 --> 00:53:33,308
需要您的应用程序进行身份验证

1195
00:53:33,377 --> 00:53:37,646
它是你正在说话的服务器知道这是你。

1196
00:53:37,715 --> 00:53:40,649
那么你将不得不去其中的功能标签

1197
00:53:40,718 --> 00:53:43,619
项目设置并打开它。

1198
00:53:43,687 --> 00:53:47,222
打开它，基本上意味着更新我的entitlements

1199
00:53:47,290 --> 00:53:50,926
所以我有权做这个特别的事情。

1200
00:53:50,994 --> 00:53:53,529
所以，看看除了iCloud之外的一些例子

1201
00:53:53,597 --> 00:53:56,064
游戏中心在顶部，你有苹果支付，

1202
00:53:56,132 --> 00:54:00,569
在应用程序购买中，显然这些东西需要服务器

1203
00:54:00,638 --> 00:54:02,303
和连接他们和事物的人。

1204
00:54:02,372 --> 00:54:04,405
甚至后台提取模式和

1205
00:54:04,474 --> 00:54:08,643
像这样的东西需要一些权利，如果你会成为

1206
00:54:08,712 --> 00:54:11,179
在后台进行抓取。

1207
00:54:11,248 --> 00:54:13,882
所以，检查这些，这是一个很酷的事情只是看看什么

1208
00:54:13,951 --> 00:54:15,350
功能在那里。

1209
00:54:15,419 --> 00:54:17,653
再次，也许方式来增加一些广度，

1210
00:54:17,721 --> 00:54:20,922
其中一些并不难实施，

1211
00:54:20,991 --> 00:54:23,225
反正简单的版本。

1212
00:54:23,294 --> 00:54:27,396
但是，您只需要启用它们即可。

1213
00:54:30,735 --> 00:54:34,169
我今天的最后一个话题是坚持不懈。

1214
00:54:34,238 --> 00:54:37,839
所以持久性只是意味着使数据保留在磁盘上

1215
00:54:37,908 --> 00:54:40,775
当你的应用程序杀掉或死亡之后。

1216
00:54:40,844 --> 00:54:43,345
你已经知道两个非常重要的。

1217
00:54:43,413 --> 00:54:47,048
用户默认是一小块数据，

1218
00:54:47,117 --> 00:54:49,518
偏好种类的数据。

1219
00:54:49,587 --> 00:54:51,253
而且必须使用PropertyLIst格式。

1220
00:54:51,322 --> 00:54:54,523
然后有核心数据，这是相反的。

1221
00:54:54,591 --> 00:54:59,928
怪物关系数据库中可以有巨大的数据。

1222
00:54:59,996 --> 00:55:02,264
它真的是一个以数据为中心的应用程序，

1223
00:55:02,332 --> 00:55:04,733
数据是什么的应用程序是什么。

1224
00:55:04,802 --> 00:55:05,734
所以，我不会谈论那些。

1225
00:55:05,802 --> 00:55:06,902
你知道那些

1226
00:55:06,970 --> 00:55:09,204
我将简要介绍一下这三篇。

1227
00:55:09,272 --> 00:55:10,472
存档。

1228
00:55:10,541 --> 00:55:15,043
所以归档是一种存储对象图的方法

1229
00:55:15,112 --> 00:55:17,813
不是磁盘上的属性列表。

1230
00:55:17,882 --> 00:55:20,815
您的故事板已存档。

1231
00:55:20,884 --> 00:55:23,418
将所有这些视图归档到磁盘。

1232
00:55:23,487 --> 00:55:24,853
所以我谈了这个。

1233
00:55:24,922 --> 00:55:27,789
SQLite，大家都知道SQL是什么，

1234
00:55:27,858 --> 00:55:29,991
其关系数据库技术。

1235
00:55:30,060 --> 00:55:35,563
iOS自带的是一种轻型版本的SQL

1236
00:55:35,632 --> 00:55:37,632
你通常不会使用你使用的核心数据。

1237
00:55:37,701 --> 00:55:41,269
核心数据实际上建立在SQLite之上

1238
00:55:41,338 --> 00:55:43,438
您不必直接访问SQL。

1239
00:55:43,507 --> 00:55:45,373
最后，你可以让事情坚持下去

1240
00:55:45,442 --> 00:55:47,609
将它们放在Unix文件系统中。

1241
00:55:47,678 --> 00:55:49,510
iOS，把Unix放在下面，所以

1242
00:55:49,579 --> 00:55:52,480
你可以把东西放在那个文件系统中。

1243
00:55:52,549 --> 00:55:54,482
我们将讨论如何做到这一点。

1244
00:55:54,551 --> 00:55:56,585
所以，我们来谈谈归档。

1245
00:55:56,654 --> 00:56:01,389
不要认为这是一个很好的方法

1246
00:56:01,458 --> 00:56:03,959
有一个任意的对象图，你有，和

1247
00:56:04,028 --> 00:56:05,460
将其存储在光盘上。

1248
00:56:05,529 --> 00:56:08,764
因为归档需要参与

1249
00:56:08,832 --> 00:56:11,867
所有要存档的对象。

1250
00:56:11,935 --> 00:56:15,203
他们每个人都必须在这里实现这两种方法

1251
00:56:15,272 --> 00:56:19,741
在代码中，它基本上占用了你的对象

1252
00:56:19,810 --> 00:56:21,377
将其转换为字典。

1253
00:56:22,746 --> 00:56:26,247
不完全是这样，但这是90％。

1254
00:56:26,316 --> 00:56:27,516
所以转换为字典。

1255
00:56:27,585 --> 00:56:30,051
然后它也必须实现这个初始化器，

1256
00:56:30,120 --> 00:56:32,020
任何想要归档的对象都必须实现

1257
00:56:32,089 --> 00:56:32,954
这个初始化器。

1258
00:56:33,023 --> 00:56:35,490
这本质上让你回头那个字典和

1259
00:56:35,559 --> 00:56:38,293
告诉您从中创建对象。

1260
00:56:38,362 --> 00:56:41,229
现在这是一种特别的，

1261
00:56:41,298 --> 00:56:44,599
这个机制是因为系统足够聪明

1262
00:56:44,668 --> 00:56:47,802
知道你什么时候把一个对象放在你的字典里。

1263
00:56:47,871 --> 00:56:50,539
和另一个在同一个对象图

1264
00:56:50,608 --> 00:56:53,575
将该对象放在那里，如果这是同一个对象。

1265
00:56:53,643 --> 00:56:56,345
所以不要求这个对象重组自己

1266
00:56:56,413 --> 00:56:58,179
两次只会要求一次和

1267
00:56:58,248 --> 00:57:00,882
那么它会指出它。

1268
00:57:00,951 --> 00:57:03,651
所以这是故事板如何工作，如果你想

1269
00:57:03,720 --> 00:57:05,787
故事板，它有一个视图层次。

1270
00:57:05,856 --> 00:57:08,356
所有这些视图都指向其他视图

1271
00:57:08,425 --> 00:57:09,224
但是

1272
00:57:09,293 --> 00:57:11,893
他们也回到他们的父视图。

1273
00:57:11,962 --> 00:57:15,063
显然你只需要一个副本

1274
00:57:15,131 --> 00:57:16,231
那个层次。

1275
00:57:16,299 --> 00:57:20,768
所以UI视图实现了这样的编码协议

1276
00:57:20,837 --> 00:57:22,004
其中的方法。

1277
00:57:22,072 --> 00:57:25,240
这就是为什么视图可以存档和所有的次要成本

1278
00:57:25,308 --> 00:57:27,709
的UI视图，与iOS像标签和

1279
00:57:27,778 --> 00:57:29,777
按钮他们也实现了这一点。

1280
00:57:29,846 --> 00:57:32,780
这就是为什么这个故事板可以存档的原因。

1281
00:57:32,849 --> 00:57:37,552
但是最终如果你开始有任意的话

1282
00:57:37,621 --> 00:57:39,071
您尝试在代码和UI中实现所有这些。

1283
00:57:39,072 --> 00:57:40,522
对象图，和

1284
00:57:40,591 --> 00:57:43,692
它开始比例如更多的工作

1285
00:57:43,760 --> 00:57:47,996
制作一个核心数据库，存储数据。

1286
00:57:48,065 --> 00:57:50,432
或将其转换为属性列表和

1287
00:57:50,501 --> 00:57:52,401
使用用户默认值，如果它是一件小事。

1288
00:57:54,604 --> 00:57:57,072
所以这个人在这里听，他们就像，很酷，

1289
00:57:57,140 --> 00:57:59,674
是的，我有一个大的数据对象图

1290
00:57:59,743 --> 00:58:01,643
我要把它放在这里使用这个。

1291
00:58:01,712 --> 00:58:05,680
那么它比你想象的要多一些。

1292
00:58:05,749 --> 00:58:08,416
而且，你也必须知道你在做什么

1293
00:58:08,485 --> 00:58:11,386
确保你得到那些后面的指针正确设置和

1294
00:58:11,455 --> 00:58:12,154
像这样的东西。

1295
00:58:14,425 --> 00:58:17,892
SQLite，所以这是一个单一的文件中的SQL，

1296
00:58:17,961 --> 00:58:20,962
一个巨大的文件整个SQL数据库。

1297
00:58:21,030 --> 00:58:24,299
它不是一个网络的东西它纯粹只是一个本地文件。

1298
00:58:24,368 --> 00:58:28,570
SQLite是一个开源项目，配有iOS。

1299
00:58:28,639 --> 00:58:29,904
一切都不是很好。

1300
00:58:29,973 --> 00:58:31,839
我不会在那里存储巨大的东西。

1301
00:58:31,908 --> 00:58:32,740
它不是真的建立

1302
00:58:32,809 --> 00:58:36,044
我可能会把巨大的东西放在文件系统中。

1303
00:58:36,112 --> 00:58:38,980
甚至当你创建一些大的东西的核心数据

1304
00:58:39,049 --> 00:58:41,649
NSData属性中有一个开关。

1305
00:58:41,718 --> 00:58:44,552
您可以打开哪个存储在外部文件中

1306
00:58:44,621 --> 00:58:46,354
实际上在数据库中。

1307
00:58:46,423 --> 00:58:49,157
如果对象会发生这种情况，通常值得填写

1308
00:58:49,225 --> 00:58:50,992
相当大

1309
00:58:51,061 --> 00:58:54,929
在SQLite中使用的API直接看起来像c。

1310
00:58:54,998 --> 00:58:58,834
毫不奇怪，它不是以任何方式面向对象

1311
00:58:58,902 --> 00:59:03,338
它只是经典的单SQL调用有功能

1312
00:59:03,407 --> 00:59:06,041
你基本上传递SQL语言。

1313
00:59:06,109 --> 00:59:10,178
它执行它，即使核心数据使用它

1314
00:59:10,247 --> 00:59:14,216
直接从核心数据看不到它。

1315
00:59:14,284 --> 00:59:16,985
你知道，有一个新的可能使用SQL

1316
00:59:17,054 --> 00:59:20,222
如果你有一些现有的数据库或某些东西。

1317
00:59:20,290 --> 00:59:21,256
文件系统，

1318
00:59:21,325 --> 00:59:24,292
现在文件系统是我想象的东西

1319
00:59:24,361 --> 00:59:27,228
有些人可能想在你的最终项目中使用。

1320
00:59:27,297 --> 00:59:32,233
并且您访问Unix文件系统的基础

1321
00:59:32,302 --> 00:59:37,238
你的应用程序有点有限。

1322
00:59:37,307 --> 00:59:41,409
所以你访问它的方式一般是四

1323
00:59:41,478 --> 00:59:42,377
步。

1324
00:59:42,445 --> 00:59:47,582
首先你会得到一个URL到Unix文件系统和

1325
00:59:47,651 --> 00:59:50,585
大约有20个预置点

1326
00:59:50,654 --> 00:59:53,288
在Unix文件系统中，您可以获取一个URL。

1327
00:59:54,391 --> 00:59:56,257
一旦你有了这个URL，

1328
00:59:56,326 --> 00:59:58,593
那么你可以在那里创建目录。

1329
00:59:58,662 --> 01:00:02,464
通过使用您的URL并添加路径在其中创建文件

1330
01:00:02,532 --> 01:00:06,134
组件来描述目录和文件。

1331
01:00:06,203 --> 01:00:08,102
然后你写的文件，

1332
01:00:08,171 --> 01:00:11,573
你通常用数据对象来做这个。

1333
01:00:11,641 --> 01:00:14,843
或者有一些可以写出的属性列表方法

1334
01:00:14,911 --> 01:00:16,778
到一个文件。

1335
01:00:16,847 --> 01:00:19,914
然后最后你会管理所有这些文件

1336
01:00:19,983 --> 01:00:21,617
一个叫做文件管理器的类。

1337
01:00:21,685 --> 01:00:23,585
所以文件管理器可以让你复制文件

1338
01:00:23,653 --> 01:00:25,820
删除文件并列出文件和目录。

1339
01:00:25,889 --> 01:00:28,023
并且您可以使用文件系统执行的所有操作，

1340
01:00:28,092 --> 01:00:29,323
你做一个文件管理器。

1341
01:00:29,392 --> 01:00:32,527
所以这些是访问文件系统的主要方面。

1342
01:00:32,596 --> 01:00:34,096
所以我们来看看这些事情。

1343
01:00:35,698 --> 01:00:38,967
这是一个Unix文件系统，它从根目录开始

1344
01:00:39,036 --> 01:00:40,402
有保护，有权限。

1345
01:00:40,470 --> 01:00:43,638
所以你不能将文件写入系统目录或

1346
01:00:43,707 --> 01:00:45,206
甚至阅读很多系统目录。

1347
01:00:45,275 --> 01:00:47,608
你当然看不到其他应用程序

1348
01:00:47,677 --> 01:00:48,476
他们在那里做什么

1349
01:00:48,545 --> 01:00:51,646
这完全不受限制。

1350
01:00:51,715 --> 01:00:54,615
其实你只能写和

1351
01:00:54,684 --> 01:00:58,019
在里面读到所谓的应用程序的沙盒。

1352
01:00:58,088 --> 01:01:02,223
所以沙盒是这个完全隔离的文件的一部分

1353
01:01:02,292 --> 01:01:05,227
系统。

1354
01:01:05,295 --> 01:01:05,760
做事。

1355
01:01:05,828 --> 01:01:07,996
现在为什么我们有一个沙箱？

1356
01:01:08,065 --> 01:01:10,365
对于某些事情，你可能看起来很明显。

1357
01:01:10,433 --> 01:01:13,334
例如安全性是一个大的。

1358
01:01:13,403 --> 01:01:16,338
我们不希望其他应用程序能够访问您的应用程序

1359
01:01:16,406 --> 01:01:17,538
并损害你。

1360
01:01:17,607 --> 01:01:18,973
那真的很糟糕

1361
01:01:19,042 --> 01:01:20,775
所以我们必须有安全性。

1362
01:01:20,844 --> 01:01:22,610
有隐私，我们不希望那些其他应用程序

1363
01:01:22,679 --> 01:01:26,447
能够看到你，看到你的私人数据。

1364
01:01:26,516 --> 01:01:29,818
但另一个有趣的原因，你不可能

1365
01:01:29,886 --> 01:01:31,052
想到是清理。

1366
01:01:31,121 --> 01:01:35,623
如果有人从手机全部删除您的应用程序

1367
01:01:35,692 --> 01:01:40,361
想要这个应用程序创建的所有东西都要走了。

1368
01:01:40,430 --> 01:01:43,164
通过拥有沙盒，这是唯一可以做到的地方

1369
01:01:43,233 --> 01:01:45,934
写，当你删除，它删除你的整个沙箱。

1370
01:01:46,003 --> 01:01:48,503
所以你创造的任何东西都没有了。

1371
01:01:48,572 --> 01:01:50,405
所以你不必担心人的写作

1372
01:01:50,474 --> 01:01:52,373
事情进入系统目录和所有这些。

1373
01:01:52,442 --> 01:01:54,509
这发生在Mac上的所有地方

1374
01:01:54,578 --> 01:01:57,112
例如，你的主目录斜杠库已经有了

1375
01:01:57,181 --> 01:01:58,413
各种垃圾在那里。

1376
01:01:58,482 --> 01:02:01,215
他们在一切都没有一样的概念

1377
01:02:01,284 --> 01:02:03,185
被隔绝像你在iOS中。

1378
01:02:03,253 --> 01:02:05,187
所以它实际上是一个很酷的功能有沙箱。

1379
01:02:06,622 --> 01:02:10,024
现在沙箱里面有一些目录

1380
01:02:10,093 --> 01:02:12,828
你也可以获得URL，我可以说约20个。

1381
01:02:12,896 --> 01:02:14,829
所以例如，有应用程序目录

1382
01:02:14,898 --> 01:02:17,632
这就是您的应用程序二进制文件。

1383
01:02:17,701 --> 01:02:21,168
你只能阅读，在那里只读，你不能写

1384
01:02:21,237 --> 01:02:23,838
对自己的应用程序不允许自修改代码，

1385
01:02:23,907 --> 01:02:25,974
在IOS中。

1386
01:02:26,042 --> 01:02:28,376
这也是你可能拥有JPEG或

1387
01:02:28,445 --> 01:02:31,079
其他的事情，如果你不使用图像资产的东西。

1388
01:02:31,148 --> 01:02:33,081
你实际上可以拖动JPEG或

1389
01:02:33,150 --> 01:02:35,316
任何目录进入您的项目。

1390
01:02:35,385 --> 01:02:38,619
他们会出现在你的应用程序包中

1391
01:02:38,688 --> 01:02:40,522
可以直接看看。

1392
01:02:41,725 --> 01:02:43,892
顺便说一下，我们很少这样做。

1393
01:02:43,961 --> 01:02:46,228
但是其他URL可以在那里查看

1394
01:02:46,296 --> 01:02:47,095
有点酷

1395
01:02:47,163 --> 01:02:49,530
文件目录是一个很大的目录。

1396
01:02:49,599 --> 01:02:52,299
那就是你要将用户创建的数据放在哪里

1397
01:02:52,368 --> 01:02:53,535
用户关心的。

1398
01:02:54,971 --> 01:02:56,804
用户将其视为文档。

1399
01:02:56,873 --> 01:02:59,674
即使您没有面向文档的应用程序

1400
01:02:59,742 --> 01:03:01,742
用户认为这是他们的数据。

1401
01:03:01,811 --> 01:03:03,244
这就是他们进入的

1402
01:03:03,313 --> 01:03:05,379
现在你应用可能会在网络上存储。

1403
01:03:05,448 --> 01:03:08,516
所以也许

1404
01:03:08,585 --> 01:03:11,553
或者您的应用程序不是具有数据的应用程序

1405
01:03:11,622 --> 01:03:12,387
没事。

1406
01:03:12,456 --> 01:03:14,422
但是如果文件目录是

1407
01:03:14,490 --> 01:03:16,591
你的主要地方你会储存东西。

1408
01:03:16,660 --> 01:03:18,693
但是有时用户创建的东西和

1409
01:03:18,762 --> 01:03:20,428
你真的只是兑现它。

1410
01:03:20,496 --> 01:03:21,162
So for example. 例如

1411
01:03:21,231 --> 01:03:24,666
让我们回到我们的Twitter客户端，Smashtag。

1412
01:03:24,735 --> 01:03:27,735
在Smashtag中，我们下载了图像

1413
01:03:27,804 --> 01:03:30,939
也许我们想保留图像

1414
01:03:31,008 --> 01:03:34,809
与本地的图像选项卡相关联。

1415
01:03:34,878 --> 01:03:36,010
这样我就是当地的

1416
01:03:36,079 --> 01:03:38,113
虽然我没有连接到网络。

1417
01:03:38,181 --> 01:03:41,115
但是那些并不是他们真正的用户数据

1418
01:03:41,184 --> 01:03:42,217
想缓存。

1419
01:03:42,285 --> 01:03:45,687
我只想让他们保持本地化，以方便使用。

1420
01:03:45,756 --> 01:03:47,589
但随着事态的消逝，

1421
01:03:47,658 --> 01:03:49,524
我可能会清除它们。

1422
01:03:49,593 --> 01:03:52,694
如果该缓存目录被完全清除

1423
01:03:52,762 --> 01:03:55,497
会很好，我只是重新加载它们。

1424
01:03:55,565 --> 01:03:57,065
所以缓存目录是一个地方

1425
01:03:57,133 --> 01:03:58,967
把你可以轻松得到的东西放回来。

1426
01:04:00,537 --> 01:04:02,904
您正在缓存的图像和内容。

1427
01:04:02,973 --> 01:04:05,373
还有一堆其他的目录。

1428
01:04:05,441 --> 01:04:07,141
我没有时间谈论所有这些，

1429
01:04:07,210 --> 01:04:08,809
不幸。

1430
01:04:08,878 --> 01:04:11,045
那么我们如何让我们的URL到这些特殊之一

1431
01:04:11,114 --> 01:04:13,181
目录如文档结构或

1432
01:04:13,250 --> 01:04:15,516
缓存目录，这样的东西？

1433
01:04:15,585 --> 01:04:18,086
我们将使用另一个默认值，

1434
01:04:18,154 --> 01:04:21,355
就像我们在这个通知中心.default。

1435
01:04:21,424 --> 01:04:23,625
现在我们有FileManager.default。

1436
01:04:23,694 --> 01:04:26,261
所以FileManager是可以让你做的事情

1437
01:04:26,329 --> 01:04:27,595
管理整个文件系统，

1438
01:04:27,664 --> 01:04:30,398
它有一个默认的可以使用。

1439
01:04:30,467 --> 01:04:33,668
并且它有一个称为URL的方法

1440
01:04:33,737 --> 01:04:36,637
目录在domainMask，好的。

1441
01:04:36,706 --> 01:04:38,540
这是你在这里看到的方法。

1442
01:04:38,608 --> 01:04:41,275
它给你一系列的URL。

1443
01:04:41,344 --> 01:04:45,146
在iOS中，只有一个URL。

1444
01:04:45,215 --> 01:04:48,816
这是桌面机器上的一个阵列，如Mac，

1445
01:04:48,885 --> 01:04:52,854
有时你会有一个图书馆目录

1446
01:04:52,923 --> 01:04:55,155
一个用于用户，一个在网络上

1447
01:04:55,224 --> 01:04:56,157
其中有多个。

1448
01:04:56,226 --> 01:04:59,760
但是在iOS中，所有的东西都在沙盒内

1449
01:04:59,829 --> 01:05:03,765
唯一的域名，这就是用户域掩码的原因

1450
01:05:03,834 --> 01:05:05,866
用户域掩码。

1451
01:05:05,935 --> 01:05:07,701
所以只有一个URL。

1452
01:05:07,770 --> 01:05:09,804
因此，您的文档目录只有一个URL。

1453
01:05:09,872 --> 01:05:11,405
缓存目录的一个URL。

1454
01:05:11,474 --> 01:05:13,841
您的文档目录的一个URL。

1455
01:05:13,910 --> 01:05:15,977
一个应用程序的URL，好的，只有一个。

1456
01:05:16,046 --> 01:05:18,546
只是沙箱中的一个。

1457
01:05:18,615 --> 01:05:21,882
所以你指定要使用哪个目录

1458
01:05:21,951 --> 01:05:24,051
因此参数为目录。

1459
01:05:24,120 --> 01:05:25,386
而这必须是一种类型

1460
01:05:25,454 --> 01:05:27,622
FileManager.SearchPathDirect- ory。

1461
01:05:27,691 --> 01:05:29,691
那么再来看看在文档和

1462
01:05:29,759 --> 01:05:32,694
您将看到沙箱中的各种目录

1463
01:05:32,762 --> 01:05:33,394
你可以看看。

1464
01:05:33,463 --> 01:05:35,130
大约有20个。

1465
01:05:35,198 --> 01:05:37,031
如果你是文件总监，例如，

1466
01:05:37,100 --> 01:05:39,700
你在那里说.documentDirectory。

1467
01:05:39,769 --> 01:05:42,203
它会给你一个只有一个的数组

1468
01:05:42,271 --> 01:05:47,008
在那里的东西

1469
01:05:47,076 --> 01:05:49,777
您的沙箱中的文档目录。

1470
01:05:49,846 --> 01:05:50,445
合理？

1471
01:05:51,748 --> 01:05:53,647
这就是我们如何进入。

1472
01:05:53,716 --> 01:05:57,585
一旦我们进入，我们想在那里创建目录，

1473
01:05:57,654 --> 01:05:59,386
创建文件，无论如何。

1474
01:05:59,455 --> 01:06:01,122
我们或访问文件。

1475
01:06:01,191 --> 01:06:05,292
我们通过在URL中使用这些附加方法来做这些。

1476
01:06:05,361 --> 01:06:07,929
所以我们有这个URL，我们发送一个消息到URL。

1477
01:06:07,998 --> 01:06:12,233
像给我一个新的URL通过URL appendingPathComponent

1478
01:06:12,302 --> 01:06:14,869
无论我的目录的名称或名称

1479
01:06:14,938 --> 01:06:18,006
我想要的文件或通过追加路径扩展名，所以

1480
01:06:18,074 --> 01:06:21,743
.jpeg，或类似的东西，所以我可以得到我的jpeg文件。

1481
01:06:21,812 --> 01:06:24,645
所以通过这样做，我建立一个路径，URL，

1482
01:06:24,714 --> 01:06:25,647
到我想要的文件。

1483
01:06:27,250 --> 01:06:29,917
所以这就是我在沙盒中的导航。

1484
01:06:29,986 --> 01:06:31,920
所以现在我有URL和

1485
01:06:31,989 --> 01:06:35,156
我可以用这个URL做很多事情。

1486
01:06:35,225 --> 01:06:37,992
我会在一会儿告诉你如何写出文件

1487
01:06:38,061 --> 01:06:40,928
这样的东西，但你也可以找到关于事物的URL

1488
01:06:40,997 --> 01:06:42,664
像这是一个文件？

1489
01:06:42,732 --> 01:06:44,565
还是一个目录？

1490
01:06:44,634 --> 01:06:46,133
还是在网络上呢？

1491
01:06:46,202 --> 01:06:48,102
你有一个URL给你，

1492
01:06:48,171 --> 01:06:49,203
也许这是一个网络URL。

1493
01:06:49,272 --> 01:06:51,472
Http，冒号，斜杠，斜杠等等。

1494
01:06:51,541 --> 01:06:55,109
那么这不是一个文件URL，所以文件，文件URL就在那里，

1495
01:06:55,178 --> 01:06:57,778
我们告诉你，它在文件系统中。

1496
01:06:57,847 --> 01:07:01,983
URL中一个非常强大的方法是resourceValues

1497
01:07:02,052 --> 01:07:03,017
键。

1498
01:07:03,085 --> 01:07:06,287
所以键的资源值给你一个键数组

1499
01:07:06,356 --> 01:07:08,422
这是文件的属性，

1500
01:07:08,491 --> 01:07:11,392
这些键是文件的属性，如文件大小或

1501
01:07:11,461 --> 01:07:13,794
文件创建日期，或其他。

1502
01:07:13,863 --> 01:07:17,331
它会返回一个字典与这些键和

1503
01:07:17,400 --> 01:07:19,200
文件的值，for

1504
01:07:19,269 --> 01:07:20,801
您指向的网址。

1505
01:07:20,870 --> 01:07:22,503
这样就可以找出文件的大小，

1506
01:07:22,572 --> 01:07:25,406
在创建日期或是否是目录。

1507
01:07:25,475 --> 01:07:26,441
像这样的东西。

1508
01:07:26,509 --> 01:07:29,343
请注意，此处列出的注意事项如此小心。

1509
01:07:29,412 --> 01:07:30,712
你必须尝试这样做。

1510
01:07:34,851 --> 01:07:36,617
如何将文件写入文件系统。

1511
01:07:36,686 --> 01:07:39,586
主要是我们用数据来做这个。

1512
01:07:39,655 --> 01:07:42,724
如果你有一个UI图像和

1513
01:07:42,792 --> 01:07:44,492
你想要储存在你的屏幕上，或者

1514
01:07:44,560 --> 01:07:46,293
无论从互联网下载什么，以及

1515
01:07:46,362 --> 01:07:48,963
你想把它存入文件系统，

1516
01:07:49,031 --> 01:07:51,766
实际上有一个很酷的功能叫做，我想，

1517
01:07:51,835 --> 01:07:55,502
UI图像jpeg表示或类似的东西。

1518
01:07:55,571 --> 01:07:59,006
你给它一个UI图像，它会返回一个数据。

1519
01:07:59,075 --> 01:08:02,443
并且数据将具有jpeg图像的数据。

1520
01:08:02,512 --> 01:08:03,244
你可以存储

1521
01:08:03,312 --> 01:08:05,913
然后你可以说写给url。

1522
01:08:05,982 --> 01:08:09,584
所以这是一个数据方法，原子地写到URL。

1523
01:08:09,653 --> 01:08:11,519
然后我们会把它写到该URL。

1524
01:08:11,588 --> 01:08:13,954
所以你必须建立自己的URL，如在沙箱中

1525
01:08:14,023 --> 01:08:16,657
目录，然后依赖于你想要的任何名称。

1526
01:08:16,726 --> 01:08:19,227
然后你说写到URL，原子上只是意味着它会

1527
01:08:19,296 --> 01:08:21,362
安全地，它将首先将它写入临时文件

1528
01:08:21,431 --> 01:08:24,031
那么如果你用完了磁盘空间，就交换它

1529
01:08:24,100 --> 01:08:26,734
在写一个文件时，它不会损坏的东西

1530
01:08:26,802 --> 01:08:29,403
那已经在那里了。

1531
01:08:29,472 --> 01:08:33,541
现在，要获取数据对象，你只需使用相同的

1532
01:08:33,610 --> 01:08:38,345
当我们做了一些主题标签或者

1533
01:08:38,414 --> 01:08:40,648
之前的演讲，

1534
01:08:40,717 --> 01:08:43,551
我们说什么数据init，URL的内容。

1535
01:08:43,620 --> 01:08:44,352
现在在这种情况下，

1536
01:08:44,421 --> 01:08:47,421
如果URL是网络URL，并且阻止主队列，

1537
01:08:47,490 --> 01:08:50,758
这里的URL可以是文件系统URL。

1538
01:08:50,827 --> 01:08:52,960
它不会阻塞主队列。

1539
01:08:53,029 --> 01:08:55,262
加载文件超快。

1540
01:08:55,331 --> 01:08:57,866
所以你真的不需要单独做

1541
01:08:59,202 --> 01:09:01,101
线程，除非可能是一个巨大的文件。

1542
01:09:01,170 --> 01:09:03,304
但即使如此，也许你可以做到这一点，是的。

1543
01:09:03,372 --> 01:09:07,041
你什么时候不想在这里做原子的？

1544
01:09:07,110 --> 01:09:08,876
我很难再想到一个例子。

1545
01:09:08,944 --> 01:09:11,579
也许这是一个非常大的文件

1546
01:09:11,648 --> 01:09:13,381
你不想创建它的两个副本。

1547
01:09:13,450 --> 01:09:15,516
安全的复制然后结束，等等

1548
01:09:15,585 --> 01:09:18,686
你现在可以看到一个巨大文件的现有副本。

1549
01:09:18,755 --> 01:09:21,655
而你不想创建另一个副本

1550
01:09:21,724 --> 01:09:23,758
作为一个安全的副本，在你移动之前，所以，

1551
01:09:23,827 --> 01:09:25,293
你可以说原子地没有这样，

1552
01:09:25,361 --> 01:09:28,863
它只是破坏你的旧的权利，我的意思是，

1553
01:09:28,932 --> 01:09:30,597
我真的很想想好一个例子，

1554
01:09:30,666 --> 01:09:33,768
你几乎总是想要到那里去。

1555
01:09:33,836 --> 01:09:36,904
那么这就是你用数据读写文件的方式，

1556
01:09:36,973 --> 01:09:38,539
非常常用的方法来做到这一点。

1557
01:09:38,607 --> 01:09:41,709
一旦你写出了文件，你就可以去

1558
01:09:41,778 --> 01:09:44,946
通过你的文件系统，看看什么文件

1559
01:09:45,015 --> 01:09:47,381
某些目录或类似的东西。

1560
01:09:47,450 --> 01:09:49,484
也许你有缓存在那里

1561
01:09:49,552 --> 01:09:51,953
你想看看你的缓存还有什么。

1562
01:09:52,021 --> 01:09:53,488
那就是FileManager的。

1563
01:09:53,556 --> 01:09:56,590
它有几十种方法做，像，

1564
01:09:56,659 --> 01:09:59,994
createDirectory（在url，将为其创建一个目录）

1565
01:10:00,062 --> 01:10:02,396
你可以把文件放在那里。

1566
01:10:02,465 --> 01:10:06,433
它也有一堆，它有一个代理。

1567
01:10:06,502 --> 01:10:08,403
和一堆应该。

1568
01:10:08,471 --> 01:10:11,372
我应该允许创建这个文件吗？

1569
01:10:11,441 --> 01:10:14,341
像这样的东西。

1570
01:10:14,410 --> 01:10:18,813
FileManager的方式是以同样的方式线程安全

1571
01:10:18,882 --> 01:10:21,916
NSManagedObjectContext是线程安全的。

1572
01:10:21,985 --> 01:10:25,552
换句话说，如果你创建一个FileManager

1573
01:10:25,621 --> 01:10:29,389
线程那么它总是线程安全的在该线程中使用它，

1574
01:10:29,458 --> 01:10:31,959
在同一个队列中。

1575
01:10:32,028 --> 01:10:34,661
如果您在另一个上创建FileManager，

1576
01:10:34,730 --> 01:10:37,231
可以安全地使用它的队列

1577
01:10:37,300 --> 01:10:39,901
他们也会一起工作。

1578
01:10:39,969 --> 01:10:43,004
只需不要尝试使用一个创建的FileManager

1579
01:10:43,072 --> 01:10:44,638
线程在不同的线程上。

1580
01:10:44,707 --> 01:10:45,974
这不是线程安全的。

1581
01:10:47,209 --> 01:10:51,712
就像NSManagedObjectContext一样

1582
01:10:51,781 --> 01:10:53,581
线程安全

1583
01:10:53,650 --> 01:10:56,951
那就是这次演讲，所以我们来了

1584
01:10:57,019 --> 01:11:00,387
是我们的下一个讲座周一和

1585
01:11:00,456 --> 01:11:04,491
你的幻灯片也将在那里期末。

1586
01:11:04,560 --> 01:11:05,193
别忘了。

1587
01:11:05,261 --> 01:11:06,027
我把它放在红色

1588
01:11:07,429 --> 01:11:10,698
多少人，

1589
01:11:12,201 --> 01:11:14,902
你们中的几个，所以确保你的幻灯片进入。

1590
01:11:14,971 --> 01:11:17,671
星期三将是期末。

1591
01:11:17,740 --> 01:11:20,674
你的最后一个项目是在星期天之后，

1592
01:11:20,743 --> 01:11:23,645
3月19日星期日午夜。

1593
01:11:25,448 --> 01:11:26,613
就是这样。

1594
01:11:26,682 --> 01:11:29,517
然后周一见

1595
01:11:29,586 --> 01:11:40,194
>>欲了解更多信息，请访问www.stanford.edu

